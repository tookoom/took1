//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("TK1Model", "FK_ProcExec_Process", "Process", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TK1.Data.Process), "ProcExec", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TK1.Data.ProcExec), true)]
[assembly: EdmRelationshipAttribute("TK1Model", "FK_ProcExec_ProcExecStatus", "ProcExecStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TK1.Data.ProcExecStatu), "ProcExec", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TK1.Data.ProcExec), true)]
[assembly: EdmRelationshipAttribute("TK1Model", "FK_XmlFiles_Context", "Context", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TK1.Data.Context), "XmlFiles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TK1.Data.XmlFile), true)]
[assembly: EdmRelationshipAttribute("TK1Model", "FK_AddressData_AddressType", "AddressType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TK1.Data.AddressType), "AddressData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TK1.Data.AddressData), true)]
[assembly: EdmRelationshipAttribute("TK1Model", "FK_PersonAddress_AddressData", "AddressData", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TK1.Data.AddressData), "PersonAddressData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TK1.Data.PersonAddressData), true)]
[assembly: EdmRelationshipAttribute("TK1Model", "FK_App_Context", "Context", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TK1.Data.Context), "App", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TK1.Data.App), true)]
[assembly: EdmRelationshipAttribute("TK1Model", "FK_Process_App", "App", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TK1.Data.App), "Process", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TK1.Data.Process), true)]
[assembly: EdmRelationshipAttribute("TK1Model", "FK_Category_Context", "Context", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TK1.Data.Context), "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TK1.Data.Category), true)]
[assembly: EdmRelationshipAttribute("TK1Model", "FK_CompanyContactData_ContactData", "ContactData", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TK1.Data.ContactData), "CustomerContactData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TK1.Data.CustomerContactData), true)]
[assembly: EdmRelationshipAttribute("TK1Model", "FK_ContactData_ContactDataType", "ContactType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TK1.Data.ContactType), "ContactData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TK1.Data.ContactData), true)]
[assembly: EdmRelationshipAttribute("TK1Model", "FK_PersonContactData_ContactData", "ContactData", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TK1.Data.ContactData), "PersonContactData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TK1.Data.PersonContactData), true)]
[assembly: EdmRelationshipAttribute("TK1Model", "FK_Customer_Context", "Context", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TK1.Data.Context), "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TK1.Data.Customer), true)]
[assembly: EdmRelationshipAttribute("TK1Model", "FK_UserData_Context", "Context", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TK1.Data.Context), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TK1.Data.User), true)]
[assembly: EdmRelationshipAttribute("TK1Model", "FK_CustomerContactData_Customer", "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TK1.Data.Customer), "CustomerContactData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TK1.Data.CustomerContactData), true)]
[assembly: EdmRelationshipAttribute("TK1Model", "FK_CustomerPerson_Customer", "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TK1.Data.Customer), "CustomerPerson", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TK1.Data.CustomerPerson), true)]
[assembly: EdmRelationshipAttribute("TK1Model", "FK_Process_Customer", "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TK1.Data.Customer), "Process", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TK1.Data.Process), true)]
[assembly: EdmRelationshipAttribute("TK1Model", "FK_CustomerPerson_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TK1.Data.Person), "CustomerPerson", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TK1.Data.CustomerPerson), true)]
[assembly: EdmRelationshipAttribute("TK1Model", "FK_Parameter_ParameterGroup", "ParameterGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TK1.Data.ParameterGroup), "Parameter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TK1.Data.Parameter), true)]
[assembly: EdmRelationshipAttribute("TK1Model", "FK_PersonAddress_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TK1.Data.Person), "PersonAddressData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TK1.Data.PersonAddressData), true)]
[assembly: EdmRelationshipAttribute("TK1Model", "FK_PersonContactData_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TK1.Data.Person), "PersonContactData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TK1.Data.PersonContactData), true)]
[assembly: EdmRelationshipAttribute("TK1Model", "FK_UserData_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TK1.Data.Person), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TK1.Data.User), true)]
[assembly: EdmRelationshipAttribute("TK1Model", "FK_EventLog_EventType", "EventType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TK1.Data.EventType), "EventLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TK1.Data.EventLog), true)]
[assembly: EdmRelationshipAttribute("TK1Model", "FK_EventLog_ProcExec", "ProcExec", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TK1.Data.ProcExec), "EventLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TK1.Data.EventLog), true)]

#endregion

namespace TK1.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class TK1Entities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new TK1Entities object using the connection string found in the 'TK1Entities' section of the application configuration file.
        /// </summary>
        public TK1Entities() : base("name=TK1Entities", "TK1Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TK1Entities object.
        /// </summary>
        public TK1Entities(string connectionString) : base(connectionString, "TK1Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TK1Entities object.
        /// </summary>
        public TK1Entities(EntityConnection connection) : base(connection, "TK1Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProcExec> ProcExecs
        {
            get
            {
                if ((_ProcExecs == null))
                {
                    _ProcExecs = base.CreateObjectSet<ProcExec>("ProcExecs");
                }
                return _ProcExecs;
            }
        }
        private ObjectSet<ProcExec> _ProcExecs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProcExecStatu> ProcExecStatus
        {
            get
            {
                if ((_ProcExecStatus == null))
                {
                    _ProcExecStatus = base.CreateObjectSet<ProcExecStatu>("ProcExecStatus");
                }
                return _ProcExecStatus;
            }
        }
        private ObjectSet<ProcExecStatu> _ProcExecStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<XmlFile> XmlFiles
        {
            get
            {
                if ((_XmlFiles == null))
                {
                    _XmlFiles = base.CreateObjectSet<XmlFile>("XmlFiles");
                }
                return _XmlFiles;
            }
        }
        private ObjectSet<XmlFile> _XmlFiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AddressData> AddressDatas
        {
            get
            {
                if ((_AddressDatas == null))
                {
                    _AddressDatas = base.CreateObjectSet<AddressData>("AddressDatas");
                }
                return _AddressDatas;
            }
        }
        private ObjectSet<AddressData> _AddressDatas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AddressType> AddressTypes
        {
            get
            {
                if ((_AddressTypes == null))
                {
                    _AddressTypes = base.CreateObjectSet<AddressType>("AddressTypes");
                }
                return _AddressTypes;
            }
        }
        private ObjectSet<AddressType> _AddressTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<App> Apps
        {
            get
            {
                if ((_Apps == null))
                {
                    _Apps = base.CreateObjectSet<App>("Apps");
                }
                return _Apps;
            }
        }
        private ObjectSet<App> _Apps;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Category>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Category> _Categories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContactData> ContactDatas
        {
            get
            {
                if ((_ContactDatas == null))
                {
                    _ContactDatas = base.CreateObjectSet<ContactData>("ContactDatas");
                }
                return _ContactDatas;
            }
        }
        private ObjectSet<ContactData> _ContactDatas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContactType> ContactTypes
        {
            get
            {
                if ((_ContactTypes == null))
                {
                    _ContactTypes = base.CreateObjectSet<ContactType>("ContactTypes");
                }
                return _ContactTypes;
            }
        }
        private ObjectSet<ContactType> _ContactTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Context> Contexts
        {
            get
            {
                if ((_Contexts == null))
                {
                    _Contexts = base.CreateObjectSet<Context>("Contexts");
                }
                return _Contexts;
            }
        }
        private ObjectSet<Context> _Contexts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Customer> Customers
        {
            get
            {
                if ((_Customers == null))
                {
                    _Customers = base.CreateObjectSet<Customer>("Customers");
                }
                return _Customers;
            }
        }
        private ObjectSet<Customer> _Customers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustomerContactData> CustomerContactDatas
        {
            get
            {
                if ((_CustomerContactDatas == null))
                {
                    _CustomerContactDatas = base.CreateObjectSet<CustomerContactData>("CustomerContactDatas");
                }
                return _CustomerContactDatas;
            }
        }
        private ObjectSet<CustomerContactData> _CustomerContactDatas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustomerPerson> CustomerPersons
        {
            get
            {
                if ((_CustomerPersons == null))
                {
                    _CustomerPersons = base.CreateObjectSet<CustomerPerson>("CustomerPersons");
                }
                return _CustomerPersons;
            }
        }
        private ObjectSet<CustomerPerson> _CustomerPersons;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Parameter> Parameters
        {
            get
            {
                if ((_Parameters == null))
                {
                    _Parameters = base.CreateObjectSet<Parameter>("Parameters");
                }
                return _Parameters;
            }
        }
        private ObjectSet<Parameter> _Parameters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ParameterGroup> ParameterGroups
        {
            get
            {
                if ((_ParameterGroups == null))
                {
                    _ParameterGroups = base.CreateObjectSet<ParameterGroup>("ParameterGroups");
                }
                return _ParameterGroups;
            }
        }
        private ObjectSet<ParameterGroup> _ParameterGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Person> People
        {
            get
            {
                if ((_People == null))
                {
                    _People = base.CreateObjectSet<Person>("People");
                }
                return _People;
            }
        }
        private ObjectSet<Person> _People;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PersonAddressData> PersonAddressDatas
        {
            get
            {
                if ((_PersonAddressDatas == null))
                {
                    _PersonAddressDatas = base.CreateObjectSet<PersonAddressData>("PersonAddressDatas");
                }
                return _PersonAddressDatas;
            }
        }
        private ObjectSet<PersonAddressData> _PersonAddressDatas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PersonContactData> PersonContactDatas
        {
            get
            {
                if ((_PersonContactDatas == null))
                {
                    _PersonContactDatas = base.CreateObjectSet<PersonContactData>("PersonContactDatas");
                }
                return _PersonContactDatas;
            }
        }
        private ObjectSet<PersonContactData> _PersonContactDatas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Process> Processes
        {
            get
            {
                if ((_Processes == null))
                {
                    _Processes = base.CreateObjectSet<Process>("Processes");
                }
                return _Processes;
            }
        }
        private ObjectSet<Process> _Processes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventLog> EventLogs
        {
            get
            {
                if ((_EventLogs == null))
                {
                    _EventLogs = base.CreateObjectSet<EventLog>("EventLogs");
                }
                return _EventLogs;
            }
        }
        private ObjectSet<EventLog> _EventLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventType> EventTypes
        {
            get
            {
                if ((_EventTypes == null))
                {
                    _EventTypes = base.CreateObjectSet<EventType>("EventTypes");
                }
                return _EventTypes;
            }
        }
        private ObjectSet<EventType> _EventTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AppLog> AppLogs
        {
            get
            {
                if ((_AppLogs == null))
                {
                    _AppLogs = base.CreateObjectSet<AppLog>("AppLogs");
                }
                return _AppLogs;
            }
        }
        private ObjectSet<AppLog> _AppLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WebSession> WebSessions
        {
            get
            {
                if ((_WebSessions == null))
                {
                    _WebSessions = base.CreateObjectSet<WebSession>("WebSessions");
                }
                return _WebSessions;
            }
        }
        private ObjectSet<WebSession> _WebSessions;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProcExecs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProcExecs(ProcExec procExec)
        {
            base.AddObject("ProcExecs", procExec);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProcExecStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProcExecStatus(ProcExecStatu procExecStatu)
        {
            base.AddObject("ProcExecStatus", procExecStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the XmlFiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToXmlFiles(XmlFile xmlFile)
        {
            base.AddObject("XmlFiles", xmlFile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AddressDatas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAddressDatas(AddressData addressData)
        {
            base.AddObject("AddressDatas", addressData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AddressTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAddressTypes(AddressType addressType)
        {
            base.AddObject("AddressTypes", addressType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Apps EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToApps(App app)
        {
            base.AddObject("Apps", app);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategories(Category category)
        {
            base.AddObject("Categories", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContactDatas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContactDatas(ContactData contactData)
        {
            base.AddObject("ContactDatas", contactData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContactTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContactTypes(ContactType contactType)
        {
            base.AddObject("ContactTypes", contactType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Contexts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContexts(Context context)
        {
            base.AddObject("Contexts", context);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Customers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomers(Customer customer)
        {
            base.AddObject("Customers", customer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CustomerContactDatas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomerContactDatas(CustomerContactData customerContactData)
        {
            base.AddObject("CustomerContactDatas", customerContactData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CustomerPersons EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomerPersons(CustomerPerson customerPerson)
        {
            base.AddObject("CustomerPersons", customerPerson);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Parameters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToParameters(Parameter parameter)
        {
            base.AddObject("Parameters", parameter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ParameterGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToParameterGroups(ParameterGroup parameterGroup)
        {
            base.AddObject("ParameterGroups", parameterGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the People EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPeople(Person person)
        {
            base.AddObject("People", person);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PersonAddressDatas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPersonAddressDatas(PersonAddressData personAddressData)
        {
            base.AddObject("PersonAddressDatas", personAddressData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PersonContactDatas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPersonContactDatas(PersonContactData personContactData)
        {
            base.AddObject("PersonContactDatas", personContactData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Processes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProcesses(Process process)
        {
            base.AddObject("Processes", process);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EventLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventLogs(EventLog eventLog)
        {
            base.AddObject("EventLogs", eventLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EventTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventTypes(EventType eventType)
        {
            base.AddObject("EventTypes", eventType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AppLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAppLogs(AppLog appLog)
        {
            base.AddObject("AppLogs", appLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WebSessions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWebSessions(WebSession webSession)
        {
            base.AddObject("WebSessions", webSession);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TK1Model", Name="AddressData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AddressData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AddressData object.
        /// </summary>
        /// <param name="addressDataID">Initial value of the AddressDataID property.</param>
        /// <param name="addressTypeID">Initial value of the AddressTypeID property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="index">Initial value of the Index property.</param>
        public static AddressData CreateAddressData(global::System.Int32 addressDataID, global::System.Int32 addressTypeID, global::System.String address, global::System.Int32 index)
        {
            AddressData addressData = new AddressData();
            addressData.AddressDataID = addressDataID;
            addressData.AddressTypeID = addressTypeID;
            addressData.Address = address;
            addressData.Index = index;
            return addressData;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AddressDataID
        {
            get
            {
                return _AddressDataID;
            }
            set
            {
                if (_AddressDataID != value)
                {
                    OnAddressDataIDChanging(value);
                    ReportPropertyChanging("AddressDataID");
                    _AddressDataID = StructuralObject.SetValidValue(value, "AddressDataID");
                    ReportPropertyChanged("AddressDataID");
                    OnAddressDataIDChanged();
                }
            }
        }
        private global::System.Int32 _AddressDataID;
        partial void OnAddressDataIDChanging(global::System.Int32 value);
        partial void OnAddressDataIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AddressTypeID
        {
            get
            {
                return _AddressTypeID;
            }
            set
            {
                OnAddressTypeIDChanging(value);
                ReportPropertyChanging("AddressTypeID");
                _AddressTypeID = StructuralObject.SetValidValue(value, "AddressTypeID");
                ReportPropertyChanged("AddressTypeID");
                OnAddressTypeIDChanged();
            }
        }
        private global::System.Int32 _AddressTypeID;
        partial void OnAddressTypeIDChanging(global::System.Int32 value);
        partial void OnAddressTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false, "Address");
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Index
        {
            get
            {
                return _Index;
            }
            set
            {
                OnIndexChanging(value);
                ReportPropertyChanging("Index");
                _Index = StructuralObject.SetValidValue(value, "Index");
                ReportPropertyChanged("Index");
                OnIndexChanged();
            }
        }
        private global::System.Int32 _Index;
        partial void OnIndexChanging(global::System.Int32 value);
        partial void OnIndexChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TK1Model", "FK_AddressData_AddressType", "AddressType")]
        public AddressType AddressType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AddressType>("TK1Model.FK_AddressData_AddressType", "AddressType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AddressType>("TK1Model.FK_AddressData_AddressType", "AddressType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AddressType> AddressTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AddressType>("TK1Model.FK_AddressData_AddressType", "AddressType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AddressType>("TK1Model.FK_AddressData_AddressType", "AddressType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TK1Model", "FK_PersonAddress_AddressData", "PersonAddressData")]
        public EntityCollection<PersonAddressData> PersonAddressDatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonAddressData>("TK1Model.FK_PersonAddress_AddressData", "PersonAddressData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonAddressData>("TK1Model.FK_PersonAddress_AddressData", "PersonAddressData", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TK1Model", Name="AddressType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AddressType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AddressType object.
        /// </summary>
        /// <param name="addressTypeID">Initial value of the AddressTypeID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static AddressType CreateAddressType(global::System.Int32 addressTypeID, global::System.String name)
        {
            AddressType addressType = new AddressType();
            addressType.AddressTypeID = addressTypeID;
            addressType.Name = name;
            return addressType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AddressTypeID
        {
            get
            {
                return _AddressTypeID;
            }
            set
            {
                if (_AddressTypeID != value)
                {
                    OnAddressTypeIDChanging(value);
                    ReportPropertyChanging("AddressTypeID");
                    _AddressTypeID = StructuralObject.SetValidValue(value, "AddressTypeID");
                    ReportPropertyChanged("AddressTypeID");
                    OnAddressTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _AddressTypeID;
        partial void OnAddressTypeIDChanging(global::System.Int32 value);
        partial void OnAddressTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TK1Model", "FK_AddressData_AddressType", "AddressData")]
        public EntityCollection<AddressData> AddressDatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AddressData>("TK1Model.FK_AddressData_AddressType", "AddressData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AddressData>("TK1Model.FK_AddressData_AddressType", "AddressData", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TK1Model", Name="App")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class App : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new App object.
        /// </summary>
        /// <param name="appID">Initial value of the AppID property.</param>
        public static App CreateApp(global::System.Int32 appID)
        {
            App app = new App();
            app.AppID = appID;
            return app;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AppID
        {
            get
            {
                return _AppID;
            }
            set
            {
                if (_AppID != value)
                {
                    OnAppIDChanging(value);
                    ReportPropertyChanging("AppID");
                    _AppID = StructuralObject.SetValidValue(value, "AppID");
                    ReportPropertyChanged("AppID");
                    OnAppIDChanged();
                }
            }
        }
        private global::System.Int32 _AppID;
        partial void OnAppIDChanging(global::System.Int32 value);
        partial void OnAppIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ContextID
        {
            get
            {
                return _ContextID;
            }
            set
            {
                OnContextIDChanging(value);
                ReportPropertyChanging("ContextID");
                _ContextID = StructuralObject.SetValidValue(value, "ContextID");
                ReportPropertyChanged("ContextID");
                OnContextIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ContextID;
        partial void OnContextIDChanging(Nullable<global::System.Int32> value);
        partial void OnContextIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TK1Model", "FK_App_Context", "Context")]
        public Context Context
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Context>("TK1Model.FK_App_Context", "Context").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Context>("TK1Model.FK_App_Context", "Context").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Context> ContextReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Context>("TK1Model.FK_App_Context", "Context");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Context>("TK1Model.FK_App_Context", "Context", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TK1Model", "FK_Process_App", "Process")]
        public EntityCollection<Process> Processes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Process>("TK1Model.FK_Process_App", "Process");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Process>("TK1Model.FK_Process_App", "Process", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TK1Model", Name="AppLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AppLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AppLog object.
        /// </summary>
        /// <param name="appLogID">Initial value of the AppLogID property.</param>
        /// <param name="logTimestamp">Initial value of the LogTimestamp property.</param>
        /// <param name="level">Initial value of the Level property.</param>
        public static AppLog CreateAppLog(global::System.Int32 appLogID, global::System.DateTime logTimestamp, global::System.Int32 level)
        {
            AppLog appLog = new AppLog();
            appLog.AppLogID = appLogID;
            appLog.LogTimestamp = logTimestamp;
            appLog.Level = level;
            return appLog;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AppLogID
        {
            get
            {
                return _AppLogID;
            }
            set
            {
                if (_AppLogID != value)
                {
                    OnAppLogIDChanging(value);
                    ReportPropertyChanging("AppLogID");
                    _AppLogID = StructuralObject.SetValidValue(value, "AppLogID");
                    ReportPropertyChanged("AppLogID");
                    OnAppLogIDChanged();
                }
            }
        }
        private global::System.Int32 _AppLogID;
        partial void OnAppLogIDChanging(global::System.Int32 value);
        partial void OnAppLogIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LogTimestamp
        {
            get
            {
                return _LogTimestamp;
            }
            set
            {
                OnLogTimestampChanging(value);
                ReportPropertyChanging("LogTimestamp");
                _LogTimestamp = StructuralObject.SetValidValue(value, "LogTimestamp");
                ReportPropertyChanged("LogTimestamp");
                OnLogTimestampChanged();
            }
        }
        private global::System.DateTime _LogTimestamp;
        partial void OnLogTimestampChanging(global::System.DateTime value);
        partial void OnLogTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Level
        {
            get
            {
                return _Level;
            }
            set
            {
                OnLevelChanging(value);
                ReportPropertyChanging("Level");
                _Level = StructuralObject.SetValidValue(value, "Level");
                ReportPropertyChanged("Level");
                OnLevelChanged();
            }
        }
        private global::System.Int32 _Level;
        partial void OnLevelChanging(global::System.Int32 value);
        partial void OnLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, true, "Message");
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Data
        {
            get
            {
                return _Data;
            }
            set
            {
                OnDataChanging(value);
                ReportPropertyChanging("Data");
                _Data = StructuralObject.SetValidValue(value, true, "Data");
                ReportPropertyChanged("Data");
                OnDataChanged();
            }
        }
        private global::System.String _Data;
        partial void OnDataChanging(global::System.String value);
        partial void OnDataChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TK1Model", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="categoryID">Initial value of the CategoryID property.</param>
        public static Category CreateCategory(global::System.Int32 categoryID)
        {
            Category category = new Category();
            category.CategoryID = categoryID;
            return category;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                if (_CategoryID != value)
                {
                    OnCategoryIDChanging(value);
                    ReportPropertyChanging("CategoryID");
                    _CategoryID = StructuralObject.SetValidValue(value, "CategoryID");
                    ReportPropertyChanged("CategoryID");
                    OnCategoryIDChanged();
                }
            }
        }
        private global::System.Int32 _CategoryID;
        partial void OnCategoryIDChanging(global::System.Int32 value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ContextID
        {
            get
            {
                return _ContextID;
            }
            set
            {
                OnContextIDChanging(value);
                ReportPropertyChanging("ContextID");
                _ContextID = StructuralObject.SetValidValue(value, "ContextID");
                ReportPropertyChanged("ContextID");
                OnContextIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ContextID;
        partial void OnContextIDChanging(Nullable<global::System.Int32> value);
        partial void OnContextIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Caption
        {
            get
            {
                return _Caption;
            }
            set
            {
                OnCaptionChanging(value);
                ReportPropertyChanging("Caption");
                _Caption = StructuralObject.SetValidValue(value, true, "Caption");
                ReportPropertyChanged("Caption");
                OnCaptionChanged();
            }
        }
        private global::System.String _Caption;
        partial void OnCaptionChanging(global::System.String value);
        partial void OnCaptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomData
        {
            get
            {
                return _CustomData;
            }
            set
            {
                OnCustomDataChanging(value);
                ReportPropertyChanging("CustomData");
                _CustomData = StructuralObject.SetValidValue(value, true, "CustomData");
                ReportPropertyChanged("CustomData");
                OnCustomDataChanged();
            }
        }
        private global::System.String _CustomData;
        partial void OnCustomDataChanging(global::System.String value);
        partial void OnCustomDataChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TK1Model", "FK_Category_Context", "Context")]
        public Context Context
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Context>("TK1Model.FK_Category_Context", "Context").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Context>("TK1Model.FK_Category_Context", "Context").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Context> ContextReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Context>("TK1Model.FK_Category_Context", "Context");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Context>("TK1Model.FK_Category_Context", "Context", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TK1Model", Name="ContactData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContactData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContactData object.
        /// </summary>
        /// <param name="contactDataID">Initial value of the ContactDataID property.</param>
        /// <param name="contactTypeID">Initial value of the ContactTypeID property.</param>
        /// <param name="data">Initial value of the Data property.</param>
        /// <param name="index">Initial value of the Index property.</param>
        public static ContactData CreateContactData(global::System.Int32 contactDataID, global::System.Int32 contactTypeID, global::System.String data, global::System.Int32 index)
        {
            ContactData contactData = new ContactData();
            contactData.ContactDataID = contactDataID;
            contactData.ContactTypeID = contactTypeID;
            contactData.Data = data;
            contactData.Index = index;
            return contactData;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContactDataID
        {
            get
            {
                return _ContactDataID;
            }
            set
            {
                if (_ContactDataID != value)
                {
                    OnContactDataIDChanging(value);
                    ReportPropertyChanging("ContactDataID");
                    _ContactDataID = StructuralObject.SetValidValue(value, "ContactDataID");
                    ReportPropertyChanged("ContactDataID");
                    OnContactDataIDChanged();
                }
            }
        }
        private global::System.Int32 _ContactDataID;
        partial void OnContactDataIDChanging(global::System.Int32 value);
        partial void OnContactDataIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContactTypeID
        {
            get
            {
                return _ContactTypeID;
            }
            set
            {
                OnContactTypeIDChanging(value);
                ReportPropertyChanging("ContactTypeID");
                _ContactTypeID = StructuralObject.SetValidValue(value, "ContactTypeID");
                ReportPropertyChanged("ContactTypeID");
                OnContactTypeIDChanged();
            }
        }
        private global::System.Int32 _ContactTypeID;
        partial void OnContactTypeIDChanging(global::System.Int32 value);
        partial void OnContactTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Data
        {
            get
            {
                return _Data;
            }
            set
            {
                OnDataChanging(value);
                ReportPropertyChanging("Data");
                _Data = StructuralObject.SetValidValue(value, false, "Data");
                ReportPropertyChanged("Data");
                OnDataChanged();
            }
        }
        private global::System.String _Data;
        partial void OnDataChanging(global::System.String value);
        partial void OnDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Index
        {
            get
            {
                return _Index;
            }
            set
            {
                OnIndexChanging(value);
                ReportPropertyChanging("Index");
                _Index = StructuralObject.SetValidValue(value, "Index");
                ReportPropertyChanged("Index");
                OnIndexChanged();
            }
        }
        private global::System.Int32 _Index;
        partial void OnIndexChanging(global::System.Int32 value);
        partial void OnIndexChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TK1Model", "FK_CompanyContactData_ContactData", "CustomerContactData")]
        public EntityCollection<CustomerContactData> CustomerContactDatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CustomerContactData>("TK1Model.FK_CompanyContactData_ContactData", "CustomerContactData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CustomerContactData>("TK1Model.FK_CompanyContactData_ContactData", "CustomerContactData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TK1Model", "FK_ContactData_ContactDataType", "ContactType")]
        public ContactType ContactType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContactType>("TK1Model.FK_ContactData_ContactDataType", "ContactType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContactType>("TK1Model.FK_ContactData_ContactDataType", "ContactType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ContactType> ContactTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContactType>("TK1Model.FK_ContactData_ContactDataType", "ContactType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ContactType>("TK1Model.FK_ContactData_ContactDataType", "ContactType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TK1Model", "FK_PersonContactData_ContactData", "PersonContactData")]
        public EntityCollection<PersonContactData> PersonContactDatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonContactData>("TK1Model.FK_PersonContactData_ContactData", "PersonContactData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonContactData>("TK1Model.FK_PersonContactData_ContactData", "PersonContactData", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TK1Model", Name="ContactType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContactType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContactType object.
        /// </summary>
        /// <param name="contactTypeID">Initial value of the ContactTypeID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ContactType CreateContactType(global::System.Int32 contactTypeID, global::System.String name)
        {
            ContactType contactType = new ContactType();
            contactType.ContactTypeID = contactTypeID;
            contactType.Name = name;
            return contactType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContactTypeID
        {
            get
            {
                return _ContactTypeID;
            }
            set
            {
                if (_ContactTypeID != value)
                {
                    OnContactTypeIDChanging(value);
                    ReportPropertyChanging("ContactTypeID");
                    _ContactTypeID = StructuralObject.SetValidValue(value, "ContactTypeID");
                    ReportPropertyChanged("ContactTypeID");
                    OnContactTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _ContactTypeID;
        partial void OnContactTypeIDChanging(global::System.Int32 value);
        partial void OnContactTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomData
        {
            get
            {
                return _CustomData;
            }
            set
            {
                OnCustomDataChanging(value);
                ReportPropertyChanging("CustomData");
                _CustomData = StructuralObject.SetValidValue(value, true, "CustomData");
                ReportPropertyChanged("CustomData");
                OnCustomDataChanged();
            }
        }
        private global::System.String _CustomData;
        partial void OnCustomDataChanging(global::System.String value);
        partial void OnCustomDataChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TK1Model", "FK_ContactData_ContactDataType", "ContactData")]
        public EntityCollection<ContactData> ContactDatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContactData>("TK1Model.FK_ContactData_ContactDataType", "ContactData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContactData>("TK1Model.FK_ContactData_ContactDataType", "ContactData", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TK1Model", Name="Context")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Context : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Context object.
        /// </summary>
        /// <param name="contextID">Initial value of the ContextID property.</param>
        public static Context CreateContext(global::System.Int32 contextID)
        {
            Context context = new Context();
            context.ContextID = contextID;
            return context;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContextID
        {
            get
            {
                return _ContextID;
            }
            set
            {
                if (_ContextID != value)
                {
                    OnContextIDChanging(value);
                    ReportPropertyChanging("ContextID");
                    _ContextID = StructuralObject.SetValidValue(value, "ContextID");
                    ReportPropertyChanged("ContextID");
                    OnContextIDChanged();
                }
            }
        }
        private global::System.Int32 _ContextID;
        partial void OnContextIDChanging(global::System.Int32 value);
        partial void OnContextIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomData
        {
            get
            {
                return _CustomData;
            }
            set
            {
                OnCustomDataChanging(value);
                ReportPropertyChanging("CustomData");
                _CustomData = StructuralObject.SetValidValue(value, true, "CustomData");
                ReportPropertyChanged("CustomData");
                OnCustomDataChanged();
            }
        }
        private global::System.String _CustomData;
        partial void OnCustomDataChanging(global::System.String value);
        partial void OnCustomDataChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TK1Model", "FK_XmlFiles_Context", "XmlFiles")]
        public EntityCollection<XmlFile> XmlFiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<XmlFile>("TK1Model.FK_XmlFiles_Context", "XmlFiles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<XmlFile>("TK1Model.FK_XmlFiles_Context", "XmlFiles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TK1Model", "FK_App_Context", "App")]
        public EntityCollection<App> Apps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<App>("TK1Model.FK_App_Context", "App");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<App>("TK1Model.FK_App_Context", "App", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TK1Model", "FK_Category_Context", "Category")]
        public EntityCollection<Category> Categories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Category>("TK1Model.FK_Category_Context", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Category>("TK1Model.FK_Category_Context", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TK1Model", "FK_Customer_Context", "Customer")]
        public EntityCollection<Customer> Customers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Customer>("TK1Model.FK_Customer_Context", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Customer>("TK1Model.FK_Customer_Context", "Customer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TK1Model", "FK_UserData_Context", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("TK1Model.FK_UserData_Context", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("TK1Model.FK_UserData_Context", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TK1Model", Name="Customer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Customer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Customer object.
        /// </summary>
        /// <param name="customerID">Initial value of the CustomerID property.</param>
        /// <param name="contextID">Initial value of the ContextID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Customer CreateCustomer(global::System.Int32 customerID, global::System.Int32 contextID, global::System.String name)
        {
            Customer customer = new Customer();
            customer.CustomerID = customerID;
            customer.ContextID = contextID;
            customer.Name = name;
            return customer;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomerID
        {
            get
            {
                return _CustomerID;
            }
            set
            {
                if (_CustomerID != value)
                {
                    OnCustomerIDChanging(value);
                    ReportPropertyChanging("CustomerID");
                    _CustomerID = StructuralObject.SetValidValue(value, "CustomerID");
                    ReportPropertyChanged("CustomerID");
                    OnCustomerIDChanged();
                }
            }
        }
        private global::System.Int32 _CustomerID;
        partial void OnCustomerIDChanging(global::System.Int32 value);
        partial void OnCustomerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContextID
        {
            get
            {
                return _ContextID;
            }
            set
            {
                OnContextIDChanging(value);
                ReportPropertyChanging("ContextID");
                _ContextID = StructuralObject.SetValidValue(value, "ContextID");
                ReportPropertyChanged("ContextID");
                OnContextIDChanged();
            }
        }
        private global::System.Int32 _ContextID;
        partial void OnContextIDChanging(global::System.Int32 value);
        partial void OnContextIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, true, "FullName");
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TK1Model", "FK_Customer_Context", "Context")]
        public Context Context
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Context>("TK1Model.FK_Customer_Context", "Context").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Context>("TK1Model.FK_Customer_Context", "Context").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Context> ContextReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Context>("TK1Model.FK_Customer_Context", "Context");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Context>("TK1Model.FK_Customer_Context", "Context", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TK1Model", "FK_CustomerContactData_Customer", "CustomerContactData")]
        public EntityCollection<CustomerContactData> CustomerContactDatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CustomerContactData>("TK1Model.FK_CustomerContactData_Customer", "CustomerContactData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CustomerContactData>("TK1Model.FK_CustomerContactData_Customer", "CustomerContactData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TK1Model", "FK_CustomerPerson_Customer", "CustomerPerson")]
        public EntityCollection<CustomerPerson> CustomerPersons
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CustomerPerson>("TK1Model.FK_CustomerPerson_Customer", "CustomerPerson");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CustomerPerson>("TK1Model.FK_CustomerPerson_Customer", "CustomerPerson", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TK1Model", "FK_Process_Customer", "Process")]
        public EntityCollection<Process> Processes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Process>("TK1Model.FK_Process_Customer", "Process");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Process>("TK1Model.FK_Process_Customer", "Process", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TK1Model", Name="CustomerContactData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustomerContactData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CustomerContactData object.
        /// </summary>
        /// <param name="customerContactInfoID">Initial value of the CustomerContactInfoID property.</param>
        /// <param name="customerID">Initial value of the CustomerID property.</param>
        /// <param name="contactDataID">Initial value of the ContactDataID property.</param>
        public static CustomerContactData CreateCustomerContactData(global::System.Int32 customerContactInfoID, global::System.Int32 customerID, global::System.Int32 contactDataID)
        {
            CustomerContactData customerContactData = new CustomerContactData();
            customerContactData.CustomerContactInfoID = customerContactInfoID;
            customerContactData.CustomerID = customerID;
            customerContactData.ContactDataID = contactDataID;
            return customerContactData;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomerContactInfoID
        {
            get
            {
                return _CustomerContactInfoID;
            }
            set
            {
                if (_CustomerContactInfoID != value)
                {
                    OnCustomerContactInfoIDChanging(value);
                    ReportPropertyChanging("CustomerContactInfoID");
                    _CustomerContactInfoID = StructuralObject.SetValidValue(value, "CustomerContactInfoID");
                    ReportPropertyChanged("CustomerContactInfoID");
                    OnCustomerContactInfoIDChanged();
                }
            }
        }
        private global::System.Int32 _CustomerContactInfoID;
        partial void OnCustomerContactInfoIDChanging(global::System.Int32 value);
        partial void OnCustomerContactInfoIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomerID
        {
            get
            {
                return _CustomerID;
            }
            set
            {
                OnCustomerIDChanging(value);
                ReportPropertyChanging("CustomerID");
                _CustomerID = StructuralObject.SetValidValue(value, "CustomerID");
                ReportPropertyChanged("CustomerID");
                OnCustomerIDChanged();
            }
        }
        private global::System.Int32 _CustomerID;
        partial void OnCustomerIDChanging(global::System.Int32 value);
        partial void OnCustomerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContactDataID
        {
            get
            {
                return _ContactDataID;
            }
            set
            {
                OnContactDataIDChanging(value);
                ReportPropertyChanging("ContactDataID");
                _ContactDataID = StructuralObject.SetValidValue(value, "ContactDataID");
                ReportPropertyChanged("ContactDataID");
                OnContactDataIDChanged();
            }
        }
        private global::System.Int32 _ContactDataID;
        partial void OnContactDataIDChanging(global::System.Int32 value);
        partial void OnContactDataIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TK1Model", "FK_CompanyContactData_ContactData", "ContactData")]
        public ContactData ContactData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContactData>("TK1Model.FK_CompanyContactData_ContactData", "ContactData").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContactData>("TK1Model.FK_CompanyContactData_ContactData", "ContactData").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ContactData> ContactDataReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContactData>("TK1Model.FK_CompanyContactData_ContactData", "ContactData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ContactData>("TK1Model.FK_CompanyContactData_ContactData", "ContactData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TK1Model", "FK_CustomerContactData_Customer", "Customer")]
        public Customer Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("TK1Model.FK_CustomerContactData_Customer", "Customer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("TK1Model.FK_CustomerContactData_Customer", "Customer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customer> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("TK1Model.FK_CustomerContactData_Customer", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customer>("TK1Model.FK_CustomerContactData_Customer", "Customer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TK1Model", Name="CustomerPerson")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustomerPerson : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CustomerPerson object.
        /// </summary>
        /// <param name="customerPersonID">Initial value of the CustomerPersonID property.</param>
        /// <param name="customerID">Initial value of the CustomerID property.</param>
        /// <param name="personID">Initial value of the PersonID property.</param>
        public static CustomerPerson CreateCustomerPerson(global::System.Int32 customerPersonID, global::System.Int32 customerID, global::System.Int32 personID)
        {
            CustomerPerson customerPerson = new CustomerPerson();
            customerPerson.CustomerPersonID = customerPersonID;
            customerPerson.CustomerID = customerID;
            customerPerson.PersonID = personID;
            return customerPerson;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomerPersonID
        {
            get
            {
                return _CustomerPersonID;
            }
            set
            {
                if (_CustomerPersonID != value)
                {
                    OnCustomerPersonIDChanging(value);
                    ReportPropertyChanging("CustomerPersonID");
                    _CustomerPersonID = StructuralObject.SetValidValue(value, "CustomerPersonID");
                    ReportPropertyChanged("CustomerPersonID");
                    OnCustomerPersonIDChanged();
                }
            }
        }
        private global::System.Int32 _CustomerPersonID;
        partial void OnCustomerPersonIDChanging(global::System.Int32 value);
        partial void OnCustomerPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomerID
        {
            get
            {
                return _CustomerID;
            }
            set
            {
                OnCustomerIDChanging(value);
                ReportPropertyChanging("CustomerID");
                _CustomerID = StructuralObject.SetValidValue(value, "CustomerID");
                ReportPropertyChanged("CustomerID");
                OnCustomerIDChanged();
            }
        }
        private global::System.Int32 _CustomerID;
        partial void OnCustomerIDChanging(global::System.Int32 value);
        partial void OnCustomerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                OnPersonIDChanging(value);
                ReportPropertyChanging("PersonID");
                _PersonID = StructuralObject.SetValidValue(value, "PersonID");
                ReportPropertyChanged("PersonID");
                OnPersonIDChanged();
            }
        }
        private global::System.Int32 _PersonID;
        partial void OnPersonIDChanging(global::System.Int32 value);
        partial void OnPersonIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TK1Model", "FK_CustomerPerson_Customer", "Customer")]
        public Customer Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("TK1Model.FK_CustomerPerson_Customer", "Customer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("TK1Model.FK_CustomerPerson_Customer", "Customer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customer> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("TK1Model.FK_CustomerPerson_Customer", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customer>("TK1Model.FK_CustomerPerson_Customer", "Customer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TK1Model", "FK_CustomerPerson_Person", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("TK1Model.FK_CustomerPerson_Person", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("TK1Model.FK_CustomerPerson_Person", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("TK1Model.FK_CustomerPerson_Person", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("TK1Model.FK_CustomerPerson_Person", "Person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TK1Model", Name="EventLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EventLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EventLog object.
        /// </summary>
        /// <param name="eventID">Initial value of the EventID property.</param>
        /// <param name="procExecID">Initial value of the ProcExecID property.</param>
        /// <param name="eventTimestamp">Initial value of the EventTimestamp property.</param>
        /// <param name="eventTypeID">Initial value of the EventTypeID property.</param>
        /// <param name="assembly">Initial value of the Assembly property.</param>
        /// <param name="source">Initial value of the Source property.</param>
        public static EventLog CreateEventLog(global::System.Int32 eventID, global::System.Int32 procExecID, global::System.DateTime eventTimestamp, global::System.Byte eventTypeID, global::System.String assembly, global::System.String source)
        {
            EventLog eventLog = new EventLog();
            eventLog.EventID = eventID;
            eventLog.ProcExecID = procExecID;
            eventLog.EventTimestamp = eventTimestamp;
            eventLog.EventTypeID = eventTypeID;
            eventLog.Assembly = assembly;
            eventLog.Source = source;
            return eventLog;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventID
        {
            get
            {
                return _EventID;
            }
            set
            {
                if (_EventID != value)
                {
                    OnEventIDChanging(value);
                    ReportPropertyChanging("EventID");
                    _EventID = StructuralObject.SetValidValue(value, "EventID");
                    ReportPropertyChanged("EventID");
                    OnEventIDChanged();
                }
            }
        }
        private global::System.Int32 _EventID;
        partial void OnEventIDChanging(global::System.Int32 value);
        partial void OnEventIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProcExecID
        {
            get
            {
                return _ProcExecID;
            }
            set
            {
                OnProcExecIDChanging(value);
                ReportPropertyChanging("ProcExecID");
                _ProcExecID = StructuralObject.SetValidValue(value, "ProcExecID");
                ReportPropertyChanged("ProcExecID");
                OnProcExecIDChanged();
            }
        }
        private global::System.Int32 _ProcExecID;
        partial void OnProcExecIDChanging(global::System.Int32 value);
        partial void OnProcExecIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EventTimestamp
        {
            get
            {
                return _EventTimestamp;
            }
            set
            {
                OnEventTimestampChanging(value);
                ReportPropertyChanging("EventTimestamp");
                _EventTimestamp = StructuralObject.SetValidValue(value, "EventTimestamp");
                ReportPropertyChanged("EventTimestamp");
                OnEventTimestampChanged();
            }
        }
        private global::System.DateTime _EventTimestamp;
        partial void OnEventTimestampChanging(global::System.DateTime value);
        partial void OnEventTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte EventTypeID
        {
            get
            {
                return _EventTypeID;
            }
            set
            {
                OnEventTypeIDChanging(value);
                ReportPropertyChanging("EventTypeID");
                _EventTypeID = StructuralObject.SetValidValue(value, "EventTypeID");
                ReportPropertyChanged("EventTypeID");
                OnEventTypeIDChanged();
            }
        }
        private global::System.Byte _EventTypeID;
        partial void OnEventTypeIDChanging(global::System.Byte value);
        partial void OnEventTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Assembly
        {
            get
            {
                return _Assembly;
            }
            set
            {
                OnAssemblyChanging(value);
                ReportPropertyChanging("Assembly");
                _Assembly = StructuralObject.SetValidValue(value, false, "Assembly");
                ReportPropertyChanged("Assembly");
                OnAssemblyChanged();
            }
        }
        private global::System.String _Assembly;
        partial void OnAssemblyChanging(global::System.String value);
        partial void OnAssemblyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Source
        {
            get
            {
                return _Source;
            }
            set
            {
                OnSourceChanging(value);
                ReportPropertyChanging("Source");
                _Source = StructuralObject.SetValidValue(value, false, "Source");
                ReportPropertyChanged("Source");
                OnSourceChanged();
            }
        }
        private global::System.String _Source;
        partial void OnSourceChanging(global::System.String value);
        partial void OnSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, true, "Message");
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Data
        {
            get
            {
                return _Data;
            }
            set
            {
                OnDataChanging(value);
                ReportPropertyChanging("Data");
                _Data = StructuralObject.SetValidValue(value, true, "Data");
                ReportPropertyChanged("Data");
                OnDataChanged();
            }
        }
        private global::System.String _Data;
        partial void OnDataChanging(global::System.String value);
        partial void OnDataChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TK1Model", "FK_EventLog_EventType", "EventType")]
        public EventType EventType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventType>("TK1Model.FK_EventLog_EventType", "EventType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventType>("TK1Model.FK_EventLog_EventType", "EventType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EventType> EventTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventType>("TK1Model.FK_EventLog_EventType", "EventType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EventType>("TK1Model.FK_EventLog_EventType", "EventType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TK1Model", "FK_EventLog_ProcExec", "ProcExec")]
        public ProcExec ProcExec
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProcExec>("TK1Model.FK_EventLog_ProcExec", "ProcExec").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProcExec>("TK1Model.FK_EventLog_ProcExec", "ProcExec").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProcExec> ProcExecReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProcExec>("TK1Model.FK_EventLog_ProcExec", "ProcExec");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProcExec>("TK1Model.FK_EventLog_ProcExec", "ProcExec", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TK1Model", Name="EventType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EventType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EventType object.
        /// </summary>
        /// <param name="eventTypeID">Initial value of the EventTypeID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static EventType CreateEventType(global::System.Byte eventTypeID, global::System.String description)
        {
            EventType eventType = new EventType();
            eventType.EventTypeID = eventTypeID;
            eventType.Description = description;
            return eventType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte EventTypeID
        {
            get
            {
                return _EventTypeID;
            }
            set
            {
                if (_EventTypeID != value)
                {
                    OnEventTypeIDChanging(value);
                    ReportPropertyChanging("EventTypeID");
                    _EventTypeID = StructuralObject.SetValidValue(value, "EventTypeID");
                    ReportPropertyChanged("EventTypeID");
                    OnEventTypeIDChanged();
                }
            }
        }
        private global::System.Byte _EventTypeID;
        partial void OnEventTypeIDChanging(global::System.Byte value);
        partial void OnEventTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TK1Model", "FK_EventLog_EventType", "EventLog")]
        public EntityCollection<EventLog> EventLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventLog>("TK1Model.FK_EventLog_EventType", "EventLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventLog>("TK1Model.FK_EventLog_EventType", "EventLog", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TK1Model", Name="Parameter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Parameter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Parameter object.
        /// </summary>
        /// <param name="parameterID">Initial value of the ParameterID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Parameter CreateParameter(global::System.Int32 parameterID, global::System.String name)
        {
            Parameter parameter = new Parameter();
            parameter.ParameterID = parameterID;
            parameter.Name = name;
            return parameter;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ParameterID
        {
            get
            {
                return _ParameterID;
            }
            set
            {
                if (_ParameterID != value)
                {
                    OnParameterIDChanging(value);
                    ReportPropertyChanging("ParameterID");
                    _ParameterID = StructuralObject.SetValidValue(value, "ParameterID");
                    ReportPropertyChanged("ParameterID");
                    OnParameterIDChanged();
                }
            }
        }
        private global::System.Int32 _ParameterID;
        partial void OnParameterIDChanging(global::System.Int32 value);
        partial void OnParameterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParameterGroupID
        {
            get
            {
                return _ParameterGroupID;
            }
            set
            {
                OnParameterGroupIDChanging(value);
                ReportPropertyChanging("ParameterGroupID");
                _ParameterGroupID = StructuralObject.SetValidValue(value, "ParameterGroupID");
                ReportPropertyChanged("ParameterGroupID");
                OnParameterGroupIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ParameterGroupID;
        partial void OnParameterGroupIDChanging(Nullable<global::System.Int32> value);
        partial void OnParameterGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, true, "Value");
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TK1Model", "FK_Parameter_ParameterGroup", "ParameterGroup")]
        public ParameterGroup ParameterGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParameterGroup>("TK1Model.FK_Parameter_ParameterGroup", "ParameterGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParameterGroup>("TK1Model.FK_Parameter_ParameterGroup", "ParameterGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ParameterGroup> ParameterGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParameterGroup>("TK1Model.FK_Parameter_ParameterGroup", "ParameterGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ParameterGroup>("TK1Model.FK_Parameter_ParameterGroup", "ParameterGroup", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TK1Model", Name="ParameterGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ParameterGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ParameterGroup object.
        /// </summary>
        /// <param name="parameterGroupID">Initial value of the ParameterGroupID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ParameterGroup CreateParameterGroup(global::System.Int32 parameterGroupID, global::System.String name)
        {
            ParameterGroup parameterGroup = new ParameterGroup();
            parameterGroup.ParameterGroupID = parameterGroupID;
            parameterGroup.Name = name;
            return parameterGroup;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ParameterGroupID
        {
            get
            {
                return _ParameterGroupID;
            }
            set
            {
                if (_ParameterGroupID != value)
                {
                    OnParameterGroupIDChanging(value);
                    ReportPropertyChanging("ParameterGroupID");
                    _ParameterGroupID = StructuralObject.SetValidValue(value, "ParameterGroupID");
                    ReportPropertyChanged("ParameterGroupID");
                    OnParameterGroupIDChanged();
                }
            }
        }
        private global::System.Int32 _ParameterGroupID;
        partial void OnParameterGroupIDChanging(global::System.Int32 value);
        partial void OnParameterGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TK1Model", "FK_Parameter_ParameterGroup", "Parameter")]
        public EntityCollection<Parameter> Parameters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Parameter>("TK1Model.FK_Parameter_ParameterGroup", "Parameter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Parameter>("TK1Model.FK_Parameter_ParameterGroup", "Parameter", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TK1Model", Name="Person")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Person : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Person object.
        /// </summary>
        /// <param name="personID">Initial value of the PersonID property.</param>
        /// <param name="fullName">Initial value of the FullName property.</param>
        public static Person CreatePerson(global::System.Int32 personID, global::System.String fullName)
        {
            Person person = new Person();
            person.PersonID = personID;
            person.FullName = fullName;
            return person;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                if (_PersonID != value)
                {
                    OnPersonIDChanging(value);
                    ReportPropertyChanging("PersonID");
                    _PersonID = StructuralObject.SetValidValue(value, "PersonID");
                    ReportPropertyChanged("PersonID");
                    OnPersonIDChanged();
                }
            }
        }
        private global::System.Int32 _PersonID;
        partial void OnPersonIDChanging(global::System.Int32 value);
        partial void OnPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NickName
        {
            get
            {
                return _NickName;
            }
            set
            {
                OnNickNameChanging(value);
                ReportPropertyChanging("NickName");
                _NickName = StructuralObject.SetValidValue(value, true, "NickName");
                ReportPropertyChanged("NickName");
                OnNickNameChanged();
            }
        }
        private global::System.String _NickName;
        partial void OnNickNameChanging(global::System.String value);
        partial void OnNickNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, false, "FullName");
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BirthDate
        {
            get
            {
                return _BirthDate;
            }
            set
            {
                OnBirthDateChanging(value);
                ReportPropertyChanging("BirthDate");
                _BirthDate = StructuralObject.SetValidValue(value, "BirthDate");
                ReportPropertyChanged("BirthDate");
                OnBirthDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _BirthDate;
        partial void OnBirthDateChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomSettings
        {
            get
            {
                return _CustomSettings;
            }
            set
            {
                OnCustomSettingsChanging(value);
                ReportPropertyChanging("CustomSettings");
                _CustomSettings = StructuralObject.SetValidValue(value, true, "CustomSettings");
                ReportPropertyChanged("CustomSettings");
                OnCustomSettingsChanged();
            }
        }
        private global::System.String _CustomSettings;
        partial void OnCustomSettingsChanging(global::System.String value);
        partial void OnCustomSettingsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomData
        {
            get
            {
                return _CustomData;
            }
            set
            {
                OnCustomDataChanging(value);
                ReportPropertyChanging("CustomData");
                _CustomData = StructuralObject.SetValidValue(value, true, "CustomData");
                ReportPropertyChanged("CustomData");
                OnCustomDataChanged();
            }
        }
        private global::System.String _CustomData;
        partial void OnCustomDataChanging(global::System.String value);
        partial void OnCustomDataChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TK1Model", "FK_CustomerPerson_Person", "CustomerPerson")]
        public EntityCollection<CustomerPerson> CustomerPersons
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CustomerPerson>("TK1Model.FK_CustomerPerson_Person", "CustomerPerson");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CustomerPerson>("TK1Model.FK_CustomerPerson_Person", "CustomerPerson", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TK1Model", "FK_PersonAddress_Person", "PersonAddressData")]
        public EntityCollection<PersonAddressData> PersonAddressDatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonAddressData>("TK1Model.FK_PersonAddress_Person", "PersonAddressData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonAddressData>("TK1Model.FK_PersonAddress_Person", "PersonAddressData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TK1Model", "FK_PersonContactData_Person", "PersonContactData")]
        public EntityCollection<PersonContactData> PersonContactDatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonContactData>("TK1Model.FK_PersonContactData_Person", "PersonContactData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonContactData>("TK1Model.FK_PersonContactData_Person", "PersonContactData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TK1Model", "FK_UserData_Person", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("TK1Model.FK_UserData_Person", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("TK1Model.FK_UserData_Person", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TK1Model", Name="PersonAddressData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PersonAddressData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PersonAddressData object.
        /// </summary>
        /// <param name="personAddressID">Initial value of the PersonAddressID property.</param>
        /// <param name="personID">Initial value of the PersonID property.</param>
        /// <param name="addressDataID">Initial value of the AddressDataID property.</param>
        public static PersonAddressData CreatePersonAddressData(global::System.Int32 personAddressID, global::System.Int32 personID, global::System.Int32 addressDataID)
        {
            PersonAddressData personAddressData = new PersonAddressData();
            personAddressData.PersonAddressID = personAddressID;
            personAddressData.PersonID = personID;
            personAddressData.AddressDataID = addressDataID;
            return personAddressData;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonAddressID
        {
            get
            {
                return _PersonAddressID;
            }
            set
            {
                if (_PersonAddressID != value)
                {
                    OnPersonAddressIDChanging(value);
                    ReportPropertyChanging("PersonAddressID");
                    _PersonAddressID = StructuralObject.SetValidValue(value, "PersonAddressID");
                    ReportPropertyChanged("PersonAddressID");
                    OnPersonAddressIDChanged();
                }
            }
        }
        private global::System.Int32 _PersonAddressID;
        partial void OnPersonAddressIDChanging(global::System.Int32 value);
        partial void OnPersonAddressIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                OnPersonIDChanging(value);
                ReportPropertyChanging("PersonID");
                _PersonID = StructuralObject.SetValidValue(value, "PersonID");
                ReportPropertyChanged("PersonID");
                OnPersonIDChanged();
            }
        }
        private global::System.Int32 _PersonID;
        partial void OnPersonIDChanging(global::System.Int32 value);
        partial void OnPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AddressDataID
        {
            get
            {
                return _AddressDataID;
            }
            set
            {
                OnAddressDataIDChanging(value);
                ReportPropertyChanging("AddressDataID");
                _AddressDataID = StructuralObject.SetValidValue(value, "AddressDataID");
                ReportPropertyChanged("AddressDataID");
                OnAddressDataIDChanged();
            }
        }
        private global::System.Int32 _AddressDataID;
        partial void OnAddressDataIDChanging(global::System.Int32 value);
        partial void OnAddressDataIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TK1Model", "FK_PersonAddress_AddressData", "AddressData")]
        public AddressData AddressData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AddressData>("TK1Model.FK_PersonAddress_AddressData", "AddressData").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AddressData>("TK1Model.FK_PersonAddress_AddressData", "AddressData").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AddressData> AddressDataReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AddressData>("TK1Model.FK_PersonAddress_AddressData", "AddressData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AddressData>("TK1Model.FK_PersonAddress_AddressData", "AddressData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TK1Model", "FK_PersonAddress_Person", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("TK1Model.FK_PersonAddress_Person", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("TK1Model.FK_PersonAddress_Person", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("TK1Model.FK_PersonAddress_Person", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("TK1Model.FK_PersonAddress_Person", "Person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TK1Model", Name="PersonContactData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PersonContactData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PersonContactData object.
        /// </summary>
        /// <param name="personContactDataID">Initial value of the PersonContactDataID property.</param>
        /// <param name="personID">Initial value of the PersonID property.</param>
        /// <param name="contactDataID">Initial value of the ContactDataID property.</param>
        public static PersonContactData CreatePersonContactData(global::System.Int32 personContactDataID, global::System.Int32 personID, global::System.Int32 contactDataID)
        {
            PersonContactData personContactData = new PersonContactData();
            personContactData.PersonContactDataID = personContactDataID;
            personContactData.PersonID = personID;
            personContactData.ContactDataID = contactDataID;
            return personContactData;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonContactDataID
        {
            get
            {
                return _PersonContactDataID;
            }
            set
            {
                if (_PersonContactDataID != value)
                {
                    OnPersonContactDataIDChanging(value);
                    ReportPropertyChanging("PersonContactDataID");
                    _PersonContactDataID = StructuralObject.SetValidValue(value, "PersonContactDataID");
                    ReportPropertyChanged("PersonContactDataID");
                    OnPersonContactDataIDChanged();
                }
            }
        }
        private global::System.Int32 _PersonContactDataID;
        partial void OnPersonContactDataIDChanging(global::System.Int32 value);
        partial void OnPersonContactDataIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                OnPersonIDChanging(value);
                ReportPropertyChanging("PersonID");
                _PersonID = StructuralObject.SetValidValue(value, "PersonID");
                ReportPropertyChanged("PersonID");
                OnPersonIDChanged();
            }
        }
        private global::System.Int32 _PersonID;
        partial void OnPersonIDChanging(global::System.Int32 value);
        partial void OnPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContactDataID
        {
            get
            {
                return _ContactDataID;
            }
            set
            {
                OnContactDataIDChanging(value);
                ReportPropertyChanging("ContactDataID");
                _ContactDataID = StructuralObject.SetValidValue(value, "ContactDataID");
                ReportPropertyChanged("ContactDataID");
                OnContactDataIDChanged();
            }
        }
        private global::System.Int32 _ContactDataID;
        partial void OnContactDataIDChanging(global::System.Int32 value);
        partial void OnContactDataIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TK1Model", "FK_PersonContactData_ContactData", "ContactData")]
        public ContactData ContactData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContactData>("TK1Model.FK_PersonContactData_ContactData", "ContactData").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContactData>("TK1Model.FK_PersonContactData_ContactData", "ContactData").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ContactData> ContactDataReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContactData>("TK1Model.FK_PersonContactData_ContactData", "ContactData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ContactData>("TK1Model.FK_PersonContactData_ContactData", "ContactData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TK1Model", "FK_PersonContactData_Person", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("TK1Model.FK_PersonContactData_Person", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("TK1Model.FK_PersonContactData_Person", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("TK1Model.FK_PersonContactData_Person", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("TK1Model.FK_PersonContactData_Person", "Person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TK1Model", Name="Process")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Process : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Process object.
        /// </summary>
        /// <param name="processID">Initial value of the ProcessID property.</param>
        /// <param name="appID">Initial value of the AppID property.</param>
        /// <param name="customerID">Initial value of the CustomerID property.</param>
        public static Process CreateProcess(global::System.Int32 processID, global::System.Int32 appID, global::System.Int32 customerID)
        {
            Process process = new Process();
            process.ProcessID = processID;
            process.AppID = appID;
            process.CustomerID = customerID;
            return process;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProcessID
        {
            get
            {
                return _ProcessID;
            }
            set
            {
                if (_ProcessID != value)
                {
                    OnProcessIDChanging(value);
                    ReportPropertyChanging("ProcessID");
                    _ProcessID = StructuralObject.SetValidValue(value, "ProcessID");
                    ReportPropertyChanged("ProcessID");
                    OnProcessIDChanged();
                }
            }
        }
        private global::System.Int32 _ProcessID;
        partial void OnProcessIDChanging(global::System.Int32 value);
        partial void OnProcessIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AppID
        {
            get
            {
                return _AppID;
            }
            set
            {
                OnAppIDChanging(value);
                ReportPropertyChanging("AppID");
                _AppID = StructuralObject.SetValidValue(value, "AppID");
                ReportPropertyChanged("AppID");
                OnAppIDChanged();
            }
        }
        private global::System.Int32 _AppID;
        partial void OnAppIDChanging(global::System.Int32 value);
        partial void OnAppIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomerID
        {
            get
            {
                return _CustomerID;
            }
            set
            {
                OnCustomerIDChanging(value);
                ReportPropertyChanging("CustomerID");
                _CustomerID = StructuralObject.SetValidValue(value, "CustomerID");
                ReportPropertyChanged("CustomerID");
                OnCustomerIDChanged();
            }
        }
        private global::System.Int32 _CustomerID;
        partial void OnCustomerIDChanging(global::System.Int32 value);
        partial void OnCustomerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TK1Model", "FK_ProcExec_Process", "ProcExec")]
        public EntityCollection<ProcExec> ProcExecs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProcExec>("TK1Model.FK_ProcExec_Process", "ProcExec");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProcExec>("TK1Model.FK_ProcExec_Process", "ProcExec", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TK1Model", "FK_Process_App", "App")]
        public App App
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<App>("TK1Model.FK_Process_App", "App").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<App>("TK1Model.FK_Process_App", "App").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<App> AppReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<App>("TK1Model.FK_Process_App", "App");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<App>("TK1Model.FK_Process_App", "App", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TK1Model", "FK_Process_Customer", "Customer")]
        public Customer Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("TK1Model.FK_Process_Customer", "Customer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("TK1Model.FK_Process_Customer", "Customer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customer> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("TK1Model.FK_Process_Customer", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customer>("TK1Model.FK_Process_Customer", "Customer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TK1Model", Name="ProcExec")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProcExec : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProcExec object.
        /// </summary>
        /// <param name="procExecID">Initial value of the ProcExecID property.</param>
        public static ProcExec CreateProcExec(global::System.Int32 procExecID)
        {
            ProcExec procExec = new ProcExec();
            procExec.ProcExecID = procExecID;
            return procExec;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProcExecID
        {
            get
            {
                return _ProcExecID;
            }
            set
            {
                if (_ProcExecID != value)
                {
                    OnProcExecIDChanging(value);
                    ReportPropertyChanging("ProcExecID");
                    _ProcExecID = StructuralObject.SetValidValue(value, "ProcExecID");
                    ReportPropertyChanged("ProcExecID");
                    OnProcExecIDChanged();
                }
            }
        }
        private global::System.Int32 _ProcExecID;
        partial void OnProcExecIDChanging(global::System.Int32 value);
        partial void OnProcExecIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProcessID
        {
            get
            {
                return _ProcessID;
            }
            set
            {
                OnProcessIDChanging(value);
                ReportPropertyChanging("ProcessID");
                _ProcessID = StructuralObject.SetValidValue(value, "ProcessID");
                ReportPropertyChanged("ProcessID");
                OnProcessIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProcessID;
        partial void OnProcessIDChanging(Nullable<global::System.Int32> value);
        partial void OnProcessIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BeginTimestamp
        {
            get
            {
                return _BeginTimestamp;
            }
            set
            {
                OnBeginTimestampChanging(value);
                ReportPropertyChanging("BeginTimestamp");
                _BeginTimestamp = StructuralObject.SetValidValue(value, "BeginTimestamp");
                ReportPropertyChanged("BeginTimestamp");
                OnBeginTimestampChanged();
            }
        }
        private Nullable<global::System.DateTime> _BeginTimestamp;
        partial void OnBeginTimestampChanging(Nullable<global::System.DateTime> value);
        partial void OnBeginTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndTimestamp
        {
            get
            {
                return _EndTimestamp;
            }
            set
            {
                OnEndTimestampChanging(value);
                ReportPropertyChanging("EndTimestamp");
                _EndTimestamp = StructuralObject.SetValidValue(value, "EndTimestamp");
                ReportPropertyChanged("EndTimestamp");
                OnEndTimestampChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndTimestamp;
        partial void OnEndTimestampChanging(Nullable<global::System.DateTime> value);
        partial void OnEndTimestampChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TK1Model", "FK_ProcExec_Process", "Process")]
        public Process Process
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Process>("TK1Model.FK_ProcExec_Process", "Process").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Process>("TK1Model.FK_ProcExec_Process", "Process").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Process> ProcessReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Process>("TK1Model.FK_ProcExec_Process", "Process");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Process>("TK1Model.FK_ProcExec_Process", "Process", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TK1Model", "FK_ProcExec_ProcExecStatus", "ProcExecStatus")]
        public ProcExecStatu ProcExecStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProcExecStatu>("TK1Model.FK_ProcExec_ProcExecStatus", "ProcExecStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProcExecStatu>("TK1Model.FK_ProcExec_ProcExecStatus", "ProcExecStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProcExecStatu> ProcExecStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProcExecStatu>("TK1Model.FK_ProcExec_ProcExecStatus", "ProcExecStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProcExecStatu>("TK1Model.FK_ProcExec_ProcExecStatus", "ProcExecStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TK1Model", "FK_EventLog_ProcExec", "EventLog")]
        public EntityCollection<EventLog> EventLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventLog>("TK1Model.FK_EventLog_ProcExec", "EventLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventLog>("TK1Model.FK_EventLog_ProcExec", "EventLog", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TK1Model", Name="ProcExecStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProcExecStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProcExecStatu object.
        /// </summary>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static ProcExecStatu CreateProcExecStatu(global::System.String status, global::System.String description)
        {
            ProcExecStatu procExecStatu = new ProcExecStatu();
            procExecStatu.Status = status;
            procExecStatu.Description = description;
            return procExecStatu;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                if (_Status != value)
                {
                    OnStatusChanging(value);
                    ReportPropertyChanging("Status");
                    _Status = StructuralObject.SetValidValue(value, false, "Status");
                    ReportPropertyChanged("Status");
                    OnStatusChanged();
                }
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TK1Model", "FK_ProcExec_ProcExecStatus", "ProcExec")]
        public EntityCollection<ProcExec> ProcExecs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProcExec>("TK1Model.FK_ProcExec_ProcExecStatus", "ProcExec");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProcExec>("TK1Model.FK_ProcExec_ProcExecStatus", "ProcExec", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TK1Model", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        public static User CreateUser(global::System.Int32 userID, global::System.String name, global::System.String password)
        {
            User user = new User();
            user.UserID = userID;
            user.Name = name;
            user.Password = password;
            return user;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value, "UserID");
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                OnPersonIDChanging(value);
                ReportPropertyChanging("PersonID");
                _PersonID = StructuralObject.SetValidValue(value, "PersonID");
                ReportPropertyChanged("PersonID");
                OnPersonIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PersonID;
        partial void OnPersonIDChanging(Nullable<global::System.Int32> value);
        partial void OnPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ContextID
        {
            get
            {
                return _ContextID;
            }
            set
            {
                OnContextIDChanging(value);
                ReportPropertyChanging("ContextID");
                _ContextID = StructuralObject.SetValidValue(value, "ContextID");
                ReportPropertyChanged("ContextID");
                OnContextIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ContextID;
        partial void OnContextIDChanging(Nullable<global::System.Int32> value);
        partial void OnContextIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false, "Password");
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TK1Model", "FK_UserData_Context", "Context")]
        public Context Context
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Context>("TK1Model.FK_UserData_Context", "Context").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Context>("TK1Model.FK_UserData_Context", "Context").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Context> ContextReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Context>("TK1Model.FK_UserData_Context", "Context");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Context>("TK1Model.FK_UserData_Context", "Context", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TK1Model", "FK_UserData_Person", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("TK1Model.FK_UserData_Person", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("TK1Model.FK_UserData_Person", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("TK1Model.FK_UserData_Person", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("TK1Model.FK_UserData_Person", "Person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TK1Model", Name="WebSession")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WebSession : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WebSession object.
        /// </summary>
        /// <param name="webSessionID">Initial value of the WebSessionID property.</param>
        /// <param name="key">Initial value of the Key property.</param>
        /// <param name="creationTimestamp">Initial value of the CreationTimestamp property.</param>
        public static WebSession CreateWebSession(global::System.String webSessionID, global::System.String key, global::System.DateTime creationTimestamp)
        {
            WebSession webSession = new WebSession();
            webSession.WebSessionID = webSessionID;
            webSession.Key = key;
            webSession.CreationTimestamp = creationTimestamp;
            return webSession;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WebSessionID
        {
            get
            {
                return _WebSessionID;
            }
            set
            {
                if (_WebSessionID != value)
                {
                    OnWebSessionIDChanging(value);
                    ReportPropertyChanging("WebSessionID");
                    _WebSessionID = StructuralObject.SetValidValue(value, false, "WebSessionID");
                    ReportPropertyChanged("WebSessionID");
                    OnWebSessionIDChanged();
                }
            }
        }
        private global::System.String _WebSessionID;
        partial void OnWebSessionIDChanging(global::System.String value);
        partial void OnWebSessionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Key
        {
            get
            {
                return _Key;
            }
            set
            {
                if (_Key != value)
                {
                    OnKeyChanging(value);
                    ReportPropertyChanging("Key");
                    _Key = StructuralObject.SetValidValue(value, false, "Key");
                    ReportPropertyChanged("Key");
                    OnKeyChanged();
                }
            }
        }
        private global::System.String _Key;
        partial void OnKeyChanging(global::System.String value);
        partial void OnKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, true, "Value");
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationTimestamp
        {
            get
            {
                return _CreationTimestamp;
            }
            set
            {
                OnCreationTimestampChanging(value);
                ReportPropertyChanging("CreationTimestamp");
                _CreationTimestamp = StructuralObject.SetValidValue(value, "CreationTimestamp");
                ReportPropertyChanged("CreationTimestamp");
                OnCreationTimestampChanged();
            }
        }
        private global::System.DateTime _CreationTimestamp;
        partial void OnCreationTimestampChanging(global::System.DateTime value);
        partial void OnCreationTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateTimestamp
        {
            get
            {
                return _UpdateTimestamp;
            }
            set
            {
                OnUpdateTimestampChanging(value);
                ReportPropertyChanging("UpdateTimestamp");
                _UpdateTimestamp = StructuralObject.SetValidValue(value, "UpdateTimestamp");
                ReportPropertyChanged("UpdateTimestamp");
                OnUpdateTimestampChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateTimestamp;
        partial void OnUpdateTimestampChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateTimestampChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TK1Model", Name="XmlFile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class XmlFile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new XmlFile object.
        /// </summary>
        /// <param name="fileName">Initial value of the FileName property.</param>
        /// <param name="contextID">Initial value of the ContextID property.</param>
        /// <param name="loadTimestamp">Initial value of the LoadTimestamp property.</param>
        public static XmlFile CreateXmlFile(global::System.String fileName, global::System.Int32 contextID, global::System.DateTime loadTimestamp)
        {
            XmlFile xmlFile = new XmlFile();
            xmlFile.FileName = fileName;
            xmlFile.ContextID = contextID;
            xmlFile.LoadTimestamp = loadTimestamp;
            return xmlFile;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                if (_FileName != value)
                {
                    OnFileNameChanging(value);
                    ReportPropertyChanging("FileName");
                    _FileName = StructuralObject.SetValidValue(value, false, "FileName");
                    ReportPropertyChanged("FileName");
                    OnFileNameChanged();
                }
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContextID
        {
            get
            {
                return _ContextID;
            }
            set
            {
                OnContextIDChanging(value);
                ReportPropertyChanging("ContextID");
                _ContextID = StructuralObject.SetValidValue(value, "ContextID");
                ReportPropertyChanged("ContextID");
                OnContextIDChanged();
            }
        }
        private global::System.Int32 _ContextID;
        partial void OnContextIDChanging(global::System.Int32 value);
        partial void OnContextIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LoadTimestamp
        {
            get
            {
                return _LoadTimestamp;
            }
            set
            {
                OnLoadTimestampChanging(value);
                ReportPropertyChanging("LoadTimestamp");
                _LoadTimestamp = StructuralObject.SetValidValue(value, "LoadTimestamp");
                ReportPropertyChanged("LoadTimestamp");
                OnLoadTimestampChanged();
            }
        }
        private global::System.DateTime _LoadTimestamp;
        partial void OnLoadTimestampChanging(global::System.DateTime value);
        partial void OnLoadTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ProcessTimestamp
        {
            get
            {
                return _ProcessTimestamp;
            }
            set
            {
                OnProcessTimestampChanging(value);
                ReportPropertyChanging("ProcessTimestamp");
                _ProcessTimestamp = StructuralObject.SetValidValue(value, "ProcessTimestamp");
                ReportPropertyChanged("ProcessTimestamp");
                OnProcessTimestampChanged();
            }
        }
        private Nullable<global::System.DateTime> _ProcessTimestamp;
        partial void OnProcessTimestampChanging(Nullable<global::System.DateTime> value);
        partial void OnProcessTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Data
        {
            get
            {
                return _Data;
            }
            set
            {
                OnDataChanging(value);
                ReportPropertyChanging("Data");
                _Data = StructuralObject.SetValidValue(value, true, "Data");
                ReportPropertyChanged("Data");
                OnDataChanged();
            }
        }
        private global::System.String _Data;
        partial void OnDataChanging(global::System.String value);
        partial void OnDataChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TK1Model", "FK_XmlFiles_Context", "Context")]
        public Context Context
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Context>("TK1Model.FK_XmlFiles_Context", "Context").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Context>("TK1Model.FK_XmlFiles_Context", "Context").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Context> ContextReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Context>("TK1Model.FK_XmlFiles_Context", "Context");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Context>("TK1Model.FK_XmlFiles_Context", "Context", value);
                }
            }
        }

        #endregion

    }

    #endregion

}

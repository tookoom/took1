<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:controlsToolkit="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Toolkit" x:Class="Numericon.Web.Silverlight.Control.MessageViewer"
    mc:Ignorable="d" d:DesignWidth="411" d:DesignHeight="224.5">
	<UserControl.Resources>
		<Style x:Key="MessageViewerExpanderStyle" TargetType="controlsToolkit:Expander">
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
			<Setter Property="VerticalContentAlignment" Value="Stretch"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="controlsToolkit:Expander">
						<Grid Background="Transparent">
							<Grid.Resources>
								<LinearGradientBrush x:Key="ExpanderArrowFill" EndPoint="0,1" StartPoint="0,0">
									<GradientStop Color="White" Offset="0"/>
									<GradientStop Color="White" Offset="0.5"/>
									<GradientStop Color="White" Offset="1"/>
								</LinearGradientBrush>
								<SolidColorBrush x:Key="ExpanderArrowHoverFill" Color="#FFE1ECE1"/>
								<SolidColorBrush x:Key="ExpanderArrowPressedFill" Color="#FFCDCDCD"/>
								<ControlTemplate x:Key="ExpanderDownHeaderTemplate" TargetType="ToggleButton">
									<Grid Background="Transparent">
										<VisualStateManager.VisualStateGroups>
											<VisualStateGroup x:Name="CheckStates">
												<VisualStateGroup.Transitions>
													<VisualTransition GeneratedDuration="00:00:00"/>
												</VisualStateGroup.Transitions>
												<VisualState x:Name="Checked">
													<Storyboard>
														<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="arrow1" Storyboard.TargetProperty="Data">
															<DiscreteObjectKeyFrame KeyTime="0" Value="M 1,4.5 L 4.5,1 L 8,4.5"/>
														</ObjectAnimationUsingKeyFrames>
														<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="arrow2" Storyboard.TargetProperty="Data">
															<DiscreteObjectKeyFrame KeyTime="0" Value="M 1,4.5 L 4.5,1 L 8,4.5"/>
														</ObjectAnimationUsingKeyFrames>
													</Storyboard>
												</VisualState>
												<VisualState x:Name="Unchecked"/>
											</VisualStateGroup>
											<VisualStateGroup x:Name="CommonStates">
												<VisualStateGroup.Transitions>
													<VisualTransition GeneratedDuration="0"/>
													<VisualTransition GeneratedDuration="00:00:00" To="MouseOver"/>
													<VisualTransition GeneratedDuration="00:00:00" To="Pressed"/>
												</VisualStateGroup.Transitions>
												<VisualState x:Name="Normal"/>
												<VisualState x:Name="MouseOver">
													<Storyboard>
														<ColorAnimation BeginTime="0" Storyboard.TargetName="arrow1" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" To="#222"/>
														<ColorAnimation BeginTime="0" Storyboard.TargetName="arrow2" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" To="#222"/>
													</Storyboard>
												</VisualState>
												<VisualState x:Name="Pressed">
													<Storyboard>
														<ColorAnimation BeginTime="0" Storyboard.TargetName="arrow1" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" To="#FF003366"/>
														<ColorAnimation BeginTime="0" Storyboard.TargetName="arrow2" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" To="#FF003366"/>
													</Storyboard>
												</VisualState>
											</VisualStateGroup>
											<VisualStateGroup x:Name="FocusStates">
												<VisualState x:Name="Focused"/>
												<VisualState x:Name="Unfocused"/>
											</VisualStateGroup>
										</VisualStateManager.VisualStateGroups>
										<Border Padding="{TemplateBinding Padding}">
											<Grid Background="Transparent">
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="19"/>
													<ColumnDefinition Width="*"/>
												</Grid.ColumnDefinitions>
												<Grid HorizontalAlignment="Center" VerticalAlignment="Center">
													<StackPanel Margin="0" Orientation="Vertical" d:LayoutOverrides="Height" VerticalAlignment="Center" HorizontalAlignment="Center">
														<Path x:Name="arrow2" Stroke="#666" StrokeThickness="2" HorizontalAlignment="Center" Data="M 1,1.5 L 4.5,5 L 8,1.5" UseLayoutRounding="False" RenderTransformOrigin="0.5,0.5" Margin="0"/>
														<Path x:Name="arrow1" Stroke="#666" StrokeThickness="2" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 1,1.5 L 4.5,5 L 8,1.5" UseLayoutRounding="False" Margin="0,-1,0,0"/>
													</StackPanel>
												</Grid>
												<ContentPresenter x:Name="header" HorizontalAlignment="Stretch" Margin="4,0,0,0" VerticalAlignment="Center" Grid.Column="1" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
											</Grid>
										</Border>
									</Grid>
								</ControlTemplate>
								<ControlTemplate x:Key="ExpanderUpHeaderTemplate" TargetType="ToggleButton">
									<Grid Background="Transparent">
										<VisualStateManager.VisualStateGroups>
											<VisualStateGroup x:Name="CheckStates">
												<VisualStateGroup.Transitions>
													<VisualTransition GeneratedDuration="00:00:00"/>
												</VisualStateGroup.Transitions>
												<VisualState x:Name="Checked">
													<Storyboard>
														<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="arrow" Storyboard.TargetProperty="Data">
															<DiscreteObjectKeyFrame KeyTime="0" Value="M 1,4.5 L 4.5,1 L 8,4.5"/>
														</ObjectAnimationUsingKeyFrames>
													</Storyboard>
												</VisualState>
												<VisualState x:Name="Unchecked"/>
											</VisualStateGroup>
											<VisualStateGroup x:Name="CommonStates">
												<VisualStateGroup.Transitions>
													<VisualTransition GeneratedDuration="0"/>
													<VisualTransition GeneratedDuration="00:00:00.1" To="MouseOver"/>
													<VisualTransition GeneratedDuration="00:00:00.1" To="Pressed"/>
												</VisualStateGroup.Transitions>
												<VisualState x:Name="Normal"/>
												<VisualState x:Name="MouseOver">
													<Storyboard>
														<ColorAnimation BeginTime="0" Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Stroke).(SolidColorBrush.Color)" To="#FF3C7FB1"/>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Fill)">
															<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ExpanderArrowHoverFill}"/>
														</ObjectAnimationUsingKeyFrames>
														<ColorAnimation BeginTime="0" Storyboard.TargetName="arrow" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" To="#222"/>
													</Storyboard>
												</VisualState>
												<VisualState x:Name="Pressed">
													<Storyboard>
														<ColorAnimation BeginTime="0" Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Stroke).(SolidColorBrush.Color)" To="#FF526C7B"/>
														<DoubleAnimation BeginTime="0" Storyboard.TargetName="circle" Storyboard.TargetProperty="StrokeThickness" To="1.5"/>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Fill)">
															<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ExpanderArrowPressedFill}"/>
														</ObjectAnimationUsingKeyFrames>
														<ColorAnimation BeginTime="0" Storyboard.TargetName="arrow" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" To="#FF003366"/>
													</Storyboard>
												</VisualState>
											</VisualStateGroup>
											<VisualStateGroup x:Name="FocusStates">
												<VisualState x:Name="Focused">
													<Storyboard>
														<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility">
															<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
														</ObjectAnimationUsingKeyFrames>
													</Storyboard>
												</VisualState>
												<VisualState x:Name="Unfocused"/>
											</VisualStateGroup>
										</VisualStateManager.VisualStateGroups>
										<Border Padding="{TemplateBinding Padding}">
											<Grid Background="Transparent">
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="19"/>
													<ColumnDefinition Width="*"/>
												</Grid.ColumnDefinitions>
												<Grid HorizontalAlignment="Left" VerticalAlignment="Top">
													<Grid.RenderTransform>
														<TransformGroup>
															<TransformGroup.Children>
																<TransformCollection>
																	<RotateTransform Angle="180" CenterX="9.5" CenterY="9.5"/>
																</TransformCollection>
															</TransformGroup.Children>
														</TransformGroup>
													</Grid.RenderTransform>
													<Ellipse x:Name="circle" Fill="{StaticResource ExpanderArrowFill}" Stroke="DarkGray" Height="19" HorizontalAlignment="Center" VerticalAlignment="Center" Width="19"/>
													<Path x:Name="arrow" Stroke="#666" StrokeThickness="2" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 1,1.5 L 4.5,5 L 8,1.5"/>
												</Grid>
												<ContentPresenter x:Name="header" HorizontalAlignment="Stretch" Margin="4,0,0,0" VerticalAlignment="Center" Grid.Column="1" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
											</Grid>
										</Border>
										<Rectangle x:Name="FocusVisualElement" Stroke="#FF448DCA" StrokeThickness="1" IsHitTestVisible="false" Visibility="Collapsed"/>
									</Grid>
								</ControlTemplate>
								<ControlTemplate x:Key="ExpanderLeftHeaderTemplate" TargetType="ToggleButton">
									<Grid Background="Transparent">
										<VisualStateManager.VisualStateGroups>
											<VisualStateGroup x:Name="CheckStates">
												<VisualStateGroup.Transitions>
													<VisualTransition GeneratedDuration="00:00:00"/>
												</VisualStateGroup.Transitions>
												<VisualState x:Name="Checked">
													<Storyboard>
														<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="arrow" Storyboard.TargetProperty="Data">
															<DiscreteObjectKeyFrame KeyTime="0" Value="M 1,4.5 L 4.5,1 L 8,4.5"/>
														</ObjectAnimationUsingKeyFrames>
													</Storyboard>
												</VisualState>
												<VisualState x:Name="Unchecked"/>
											</VisualStateGroup>
											<VisualStateGroup x:Name="CommonStates">
												<VisualStateGroup.Transitions>
													<VisualTransition GeneratedDuration="0"/>
													<VisualTransition GeneratedDuration="00:00:00.1" To="MouseOver"/>
													<VisualTransition GeneratedDuration="00:00:00.1" To="Pressed"/>
												</VisualStateGroup.Transitions>
												<VisualState x:Name="Normal"/>
												<VisualState x:Name="MouseOver">
													<Storyboard>
														<ColorAnimation BeginTime="0" Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Stroke).(SolidColorBrush.Color)" To="#FF3C7FB1"/>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Fill)">
															<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ExpanderArrowHoverFill}"/>
														</ObjectAnimationUsingKeyFrames>
														<ColorAnimation BeginTime="0" Storyboard.TargetName="arrow" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" To="#222"/>
													</Storyboard>
												</VisualState>
												<VisualState x:Name="Pressed">
													<Storyboard>
														<ColorAnimation BeginTime="0" Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Stroke).(SolidColorBrush.Color)" To="#FF526C7B"/>
														<DoubleAnimation BeginTime="0" Storyboard.TargetName="circle" Storyboard.TargetProperty="StrokeThickness" To="1.5"/>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Fill)">
															<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ExpanderArrowPressedFill}"/>
														</ObjectAnimationUsingKeyFrames>
														<ColorAnimation BeginTime="0" Storyboard.TargetName="arrow" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" To="#FF003366"/>
													</Storyboard>
												</VisualState>
											</VisualStateGroup>
											<VisualStateGroup x:Name="FocusStates">
												<VisualState x:Name="Focused">
													<Storyboard>
														<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility">
															<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
														</ObjectAnimationUsingKeyFrames>
													</Storyboard>
												</VisualState>
												<VisualState x:Name="Unfocused"/>
											</VisualStateGroup>
										</VisualStateManager.VisualStateGroups>
										<Border Padding="{TemplateBinding Padding}">
											<Grid Background="Transparent">
												<Grid.RowDefinitions>
													<RowDefinition Height="19"/>
													<RowDefinition Height="*"/>
												</Grid.RowDefinitions>
												<Grid HorizontalAlignment="Center" VerticalAlignment="Top">
													<Grid.RenderTransform>
														<TransformGroup>
															<TransformGroup.Children>
																<TransformCollection>
																	<RotateTransform Angle="90" CenterX="9.5" CenterY="9.5"/>
																</TransformCollection>
															</TransformGroup.Children>
														</TransformGroup>
													</Grid.RenderTransform>
													<Ellipse x:Name="circle" Fill="{StaticResource ExpanderArrowFill}" Stroke="DarkGray" Height="19" HorizontalAlignment="Center" VerticalAlignment="Center" Width="19"/>
													<Path x:Name="arrow" Stroke="#666" StrokeThickness="2" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 1,1.5 L 4.5,5 L 8,1.5"/>
												</Grid>
												<ContentPresenter x:Name="header" HorizontalAlignment="Center" Margin="0,4,0,0" VerticalAlignment="Stretch" Grid.Row="1" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
											</Grid>
										</Border>
										<Rectangle x:Name="FocusVisualElement" Stroke="#FF448DCA" StrokeThickness="1" IsHitTestVisible="false" Visibility="Collapsed"/>
									</Grid>
								</ControlTemplate>
								<ControlTemplate x:Key="ExpanderRightHeaderTemplate" TargetType="ToggleButton">
									<Grid Background="Transparent">
										<VisualStateManager.VisualStateGroups>
											<VisualStateGroup x:Name="CheckStates">
												<VisualStateGroup.Transitions>
													<VisualTransition GeneratedDuration="00:00:00"/>
												</VisualStateGroup.Transitions>
												<VisualState x:Name="Checked">
													<Storyboard>
														<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="arrow" Storyboard.TargetProperty="Data">
															<DiscreteObjectKeyFrame KeyTime="0" Value="M 1,4.5 L 4.5,1 L 8,4.5"/>
														</ObjectAnimationUsingKeyFrames>
													</Storyboard>
												</VisualState>
												<VisualState x:Name="Unchecked"/>
											</VisualStateGroup>
											<VisualStateGroup x:Name="CommonStates">
												<VisualStateGroup.Transitions>
													<VisualTransition GeneratedDuration="0"/>
													<VisualTransition GeneratedDuration="00:00:00.1" To="MouseOver"/>
													<VisualTransition GeneratedDuration="00:00:00.1" To="Pressed"/>
												</VisualStateGroup.Transitions>
												<VisualState x:Name="Normal"/>
												<VisualState x:Name="MouseOver">
													<Storyboard>
														<ColorAnimation BeginTime="0" Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Stroke).(SolidColorBrush.Color)" To="#FF3C7FB1"/>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Fill)">
															<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ExpanderArrowHoverFill}"/>
														</ObjectAnimationUsingKeyFrames>
														<ColorAnimation BeginTime="0" Storyboard.TargetName="arrow" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" To="#222"/>
													</Storyboard>
												</VisualState>
												<VisualState x:Name="Pressed">
													<Storyboard>
														<ColorAnimation BeginTime="0" Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Stroke).(SolidColorBrush.Color)" To="#FF526C7B"/>
														<DoubleAnimation BeginTime="0" Storyboard.TargetName="circle" Storyboard.TargetProperty="StrokeThickness" To="1.5"/>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="circle" Storyboard.TargetProperty="(Ellipse.Fill)">
															<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ExpanderArrowPressedFill}"/>
														</ObjectAnimationUsingKeyFrames>
														<ColorAnimation BeginTime="0" Storyboard.TargetName="arrow" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" To="#FF003366"/>
													</Storyboard>
												</VisualState>
											</VisualStateGroup>
											<VisualStateGroup x:Name="FocusStates">
												<VisualState x:Name="Focused">
													<Storyboard>
														<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility">
															<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
														</ObjectAnimationUsingKeyFrames>
													</Storyboard>
												</VisualState>
												<VisualState x:Name="Unfocused"/>
											</VisualStateGroup>
										</VisualStateManager.VisualStateGroups>
										<Border Padding="{TemplateBinding Padding}">
											<Grid Background="Transparent">
												<Grid.RowDefinitions>
													<RowDefinition Height="19"/>
													<RowDefinition Height="*"/>
												</Grid.RowDefinitions>
												<Grid HorizontalAlignment="Center" VerticalAlignment="Top">
													<Grid.RenderTransform>
														<TransformGroup>
															<TransformGroup.Children>
																<TransformCollection>
																	<RotateTransform Angle="270" CenterX="9.5" CenterY="9.5"/>
																</TransformCollection>
															</TransformGroup.Children>
														</TransformGroup>
													</Grid.RenderTransform>
													<Ellipse x:Name="circle" Fill="{StaticResource ExpanderArrowFill}" Stroke="DarkGray" Height="19" HorizontalAlignment="Center" VerticalAlignment="Center" Width="19"/>
													<Path x:Name="arrow" Stroke="#666" StrokeThickness="2" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 1,1.5 L 4.5,5 L 8,1.5"/>
												</Grid>
												<ContentPresenter x:Name="header" HorizontalAlignment="Center" Margin="0,4,0,0" VerticalAlignment="Stretch" Grid.Row="1" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
											</Grid>
										</Border>
										<Rectangle x:Name="FocusVisualElement" Stroke="#FF448DCA" StrokeThickness="1" IsHitTestVisible="false" Visibility="Collapsed"/>
									</Grid>
								</ControlTemplate>
							</Grid.Resources>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0"/>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="Disabled">
										<Storyboard>
											<DoubleAnimation Duration="0" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)" To="1"/>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="FocusStates">
									<VisualState x:Name="Focused">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Unfocused"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="ExpansionStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0"/>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="Collapsed"/>
									<VisualState x:Name="Expanded">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="ExpandDirectionStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0"/>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="ExpandDown">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="rd1" Storyboard.TargetProperty="Height">
												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="cd0" Storyboard.TargetProperty="Width">
												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="ExpandUp">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpanderButton" Storyboard.TargetProperty="Template">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ExpanderUpHeaderTemplate}"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpanderButton" Storyboard.TargetProperty="(Grid.Row)">
												<DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(Grid.Row)">
												<DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="rd0" Storyboard.TargetProperty="Height">
												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="cd0" Storyboard.TargetProperty="Width">
												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="ExpandLeft">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpanderButton" Storyboard.TargetProperty="Template">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ExpanderLeftHeaderTemplate}"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpanderButton" Storyboard.TargetProperty="(Grid.Column)">
												<DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(Grid.Row)">
												<DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="rd0" Storyboard.TargetProperty="Height">
												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="cd0" Storyboard.TargetProperty="Width">
												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="ExpandRight">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderButton" Storyboard.TargetProperty="Template">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ExpanderRightHeaderTemplate}"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(Grid.Row)">
												<DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(Grid.Column)">
												<DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="rd0" Storyboard.TargetProperty="Height">
												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="cd1" Storyboard.TargetProperty="Width">
												<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Border x:Name="Background" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition x:Name="cd0" Width="Auto"/>
										<ColumnDefinition x:Name="cd1" Width="Auto"/>
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition x:Name="rd0" Height="Auto"/>
										<RowDefinition x:Name="rd1" Height="Auto"/>
									</Grid.RowDefinitions>
									<ToggleButton x:Name="ExpanderButton" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" Template="{StaticResource ExpanderDownHeaderTemplate}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Margin="1" MinHeight="0" MinWidth="0" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" Grid.Column="0" Grid.Row="0" IsChecked="{TemplateBinding IsExpanded}"/>
									<ContentControl x:Name="ExpandSite" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Grid.Column="0" Grid.Row="1"/>
								</Grid>
							</Border>
							<Border x:Name="DisabledVisualElement" IsHitTestVisible="false" Opacity="0" Background="#A5FFFFFF"/>
							<Border x:Name="FocusVisualElement" IsHitTestVisible="false" Visibility="Collapsed" BorderThickness="1" BorderBrush="#FF207022"/>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="MessageViewerScrollViewerStyle" TargetType="ScrollViewer">
			<Setter Property="HorizontalContentAlignment" Value="Left"/>
			<Setter Property="VerticalContentAlignment" Value="Top"/>
			<Setter Property="VerticalScrollBarVisibility" Value="Visible"/>
			<Setter Property="Padding" Value="4"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="BorderBrush">
				<Setter.Value>
					<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
						<GradientStop Color="#FFA3AEB9" Offset="0"/>
						<GradientStop Color="#FF8399A9" Offset="0.375"/>
						<GradientStop Color="#FF718597" Offset="0.375"/>
						<GradientStop Color="#FF617584" Offset="1"/>
					</LinearGradientBrush>
				</Setter.Value>
			</Setter>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ScrollViewer">
						<Border BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1">
							<Grid Background="{TemplateBinding Background}">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition Height="*"/>
									<RowDefinition Height="Auto"/>
								</Grid.RowDefinitions>
								<ScrollContentPresenter x:Name="ScrollContentPresenter" Cursor="{TemplateBinding Cursor}" Margin="{TemplateBinding Padding}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
								<Rectangle Fill="#FFE9EEF4" Grid.Column="1" Grid.Row="1"/>
								<ScrollBar x:Name="VerticalScrollBar" IsTabStop="False" Margin="0,-1,-1,-1" Width="18" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Grid.Column="1" Grid.Row="0" Orientation="Vertical" ViewportSize="{TemplateBinding ViewportHeight}" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Value="{TemplateBinding VerticalOffset}" Style="{StaticResource NCScrollBarStyle}"/>
								<ScrollBar x:Name="HorizontalScrollBar" IsTabStop="False" Height="18" Margin="-1,0,-1,-1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Grid.Column="0" Grid.Row="1" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Value="{TemplateBinding HorizontalOffset}" Style="{StaticResource NCScrollBarStyle}"/>
							</Grid>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="MessageViewerButtonStyle" TargetType="Button">
			<Setter Property="Background" Value="#FF1F3B53"/>
			<Setter Property="Foreground" Value="#FF000000"/>
			<Setter Property="Padding" Value="3"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="BorderBrush">
				<Setter.Value>
					<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
						<GradientStop Color="#FFA3AEB9" Offset="0"/>
						<GradientStop Color="#FF8399A9" Offset="0.375"/>
						<GradientStop Color="#FF718597" Offset="0.375"/>
						<GradientStop Color="#FF617584" Offset="1"/>
					</LinearGradientBrush>
				</Setter.Value>
			</Setter>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Grid>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver">
										<Storyboard>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="Opacity">
												<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
											</DoubleAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="(Border.BorderThickness)">
												<DiscreteObjectKeyFrame KeyTime="00:00:00">
													<DiscreteObjectKeyFrame.Value>
														<Thickness>1</Thickness>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Pressed">
										<Storyboard>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="Opacity">
												<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
											</DoubleAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="(Border.BorderThickness)">
												<DiscreteObjectKeyFrame KeyTime="00:00:00">
													<DiscreteObjectKeyFrame.Value>
														<Thickness>1</Thickness>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
												<EasingColorKeyFrame KeyTime="00:00:00" Value="#FF686868"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled">
										<Storyboard>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity">
												<SplineDoubleKeyFrame KeyTime="0" Value=".55"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="FocusStates">
									<VisualState x:Name="Focused"/>
									<VisualState x:Name="Unfocused"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Border x:Name="Background" BorderThickness="{TemplateBinding BorderThickness}">
								<Grid Margin="0">
									<Border x:Name="BackgroundAnimation" Opacity="0" BorderBrush="#FFCDCDCD"/>
								</Grid>
							</Border>
							<ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="4"/>
							<Rectangle x:Name="DisabledVisualElement" Fill="#FFFFFFFF" IsHitTestVisible="false" Opacity="0"/>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</UserControl.Resources>
    <Grid x:Name="LayoutRoot" Background="White">

    	<Grid.ColumnDefinitions>
    		<ColumnDefinition MinWidth="10" Width="Auto"/>
    		<ColumnDefinition/>
    	</Grid.ColumnDefinitions>
    	<Rectangle x:Name="background" Fill="#FFB7FFCC" Margin="0" Grid.ColumnSpan="2"/>
    	<Image x:Name="iconWarning" HorizontalAlignment="Center" Margin="2,7,2,0" VerticalAlignment="Top" Source="/Numericon.Web.Silverlight;Component/Image/Alert.png" Stretch="None"/>
    	<Image x:Name="iconError" HorizontalAlignment="Center" Margin="2,7,2,0" VerticalAlignment="Top" Source="/Numericon.Web.Silverlight;Component/Image/error.png" Stretch="None"/>
    	<Image x:Name="iconInfo" HorizontalAlignment="Center" Margin="2,7,2,0" VerticalAlignment="Top" Source="/Numericon.Web.Silverlight;Component/Image/information.png" Stretch="None"/>
    	<Image x:Name="iconDefault" Height="16" Margin="2,7,2,0" VerticalAlignment="Top" Source="/Numericon.Web.Silverlight;Component/Image/table.png" Stretch="Fill" HorizontalAlignment="Center"/>
    	<controlsToolkit:Expander Margin="0" Style="{StaticResource MessageViewerExpanderStyle}" VerticalAlignment="Top" Grid.Column="1" d:LayoutOverrides="Width">
    		<controlsToolkit:Expander.Header>
    			<Grid Margin="0" Grid.Column="1" VerticalAlignment="Center">
    				<Grid.ColumnDefinitions>
    					<ColumnDefinition/>
    					<ColumnDefinition Width="Auto" MinWidth="20"/>
    					<ColumnDefinition Width="Auto" MinWidth="2"/>
    					<ColumnDefinition MinWidth="10" Width="Auto"/>
    					<ColumnDefinition MinWidth="15" Width="Auto"/>
    				</Grid.ColumnDefinitions>
    				<TextBlock x:Name="textBlockHeader" Margin="2,0" VerticalAlignment="Center" Grid.ColumnSpan="5" Text="TextBlock" TextWrapping="Wrap"/>
    				<Button x:Name="buttonNextMessage" HorizontalAlignment="Center" Margin="2,0" Style="{StaticResource MessageViewerButtonStyle}" VerticalAlignment="Center" Content="&gt;" Grid.Column="3" Click="buttonNextMessage_Click" FontWeight="Bold" Foreground="Black"/>
    				<Button x:Name="buttonPreviousMessage" HorizontalAlignment="Center" Margin="2,0" Style="{StaticResource MessageViewerButtonStyle}" VerticalAlignment="Center" Content="&lt;" Grid.Column="1" Click="buttonPreviousMessage_Click" FontWeight="Bold" Foreground="Black"/>
    				<Button x:Name="buttonDeleteMessage" HorizontalAlignment="Center" Margin="2,0" Style="{StaticResource MessageViewerButtonStyle}" VerticalAlignment="Center" Content="Delete" Grid.Column="4" Click="buttonDeleteMessage_Click" Foreground="Black"/>
    				<TextBlock x:Name="textBlockMessageIndex" HorizontalAlignment="Left" Margin="2,0" Text="1/1" TextWrapping="Wrap" d:LayoutOverrides="Height" Grid.Column="2" VerticalAlignment="Center" Foreground="Black"/>
    			</Grid>
    		</controlsToolkit:Expander.Header>
    		<Grid>
    			<ScrollViewer Margin="0" Style="{StaticResource MessageViewerScrollViewerStyle}" VerticalScrollBarVisibility="Auto" d:LayoutOverrides="Height" Padding="4,1">
    				<TextBlock x:Name="textBlockMessage" Text="TextBlock" TextWrapping="Wrap" VerticalAlignment="Center"/>
    			</ScrollViewer>
    		</Grid>
    	</controlsToolkit:Expander>

    </Grid>
</UserControl>

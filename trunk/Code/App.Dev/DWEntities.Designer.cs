//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("AM_DWModel", "FK_CountryStates_CountryRegions", "CountryRegions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TK1.Dev.CountryRegion), "CountryStates", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TK1.Dev.CountryState), true)]
[assembly: EdmRelationshipAttribute("AM_DWModel", "FK_Stores_Locations", "Locations", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TK1.Dev.Location), "Stores", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TK1.Dev.Store), true)]
[assembly: EdmRelationshipAttribute("AM_DWModel", "FK_Sales_Stores", "Stores", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TK1.Dev.Store), "Sales", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TK1.Dev.Sale), true)]
[assembly: EdmRelationshipAttribute("AM_DWModel", "FK_Sales_Times", "Times", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TK1.Dev.Time), "Sales", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TK1.Dev.Sale), true)]
[assembly: EdmRelationshipAttribute("AM_DWModel", "FK_StockFact_Stores", "Stores", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TK1.Dev.Store), "Stock", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TK1.Dev.Stock), true)]

#endregion

namespace TK1.Dev
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class AM_DWEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new AM_DWEntities object using the connection string found in the 'AM_DWEntities' section of the application configuration file.
        /// </summary>
        public AM_DWEntities() : base("name=AM_DWEntities", "AM_DWEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AM_DWEntities object.
        /// </summary>
        public AM_DWEntities(string connectionString) : base(connectionString, "AM_DWEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AM_DWEntities object.
        /// </summary>
        public AM_DWEntities(EntityConnection connection) : base(connection, "AM_DWEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CountryRegion> CountryRegions
        {
            get
            {
                if ((_CountryRegions == null))
                {
                    _CountryRegions = base.CreateObjectSet<CountryRegion>("CountryRegions");
                }
                return _CountryRegions;
            }
        }
        private ObjectSet<CountryRegion> _CountryRegions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CountryState> CountryStates
        {
            get
            {
                if ((_CountryStates == null))
                {
                    _CountryStates = base.CreateObjectSet<CountryState>("CountryStates");
                }
                return _CountryStates;
            }
        }
        private ObjectSet<CountryState> _CountryStates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ErrorLog> ErrorLogs
        {
            get
            {
                if ((_ErrorLogs == null))
                {
                    _ErrorLogs = base.CreateObjectSet<ErrorLog>("ErrorLogs");
                }
                return _ErrorLogs;
            }
        }
        private ObjectSet<ErrorLog> _ErrorLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Location> Locations
        {
            get
            {
                if ((_Locations == null))
                {
                    _Locations = base.CreateObjectSet<Location>("Locations");
                }
                return _Locations;
            }
        }
        private ObjectSet<Location> _Locations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Product> Products
        {
            get
            {
                if ((_Products == null))
                {
                    _Products = base.CreateObjectSet<Product>("Products");
                }
                return _Products;
            }
        }
        private ObjectSet<Product> _Products;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Sale> Sales
        {
            get
            {
                if ((_Sales == null))
                {
                    _Sales = base.CreateObjectSet<Sale>("Sales");
                }
                return _Sales;
            }
        }
        private ObjectSet<Sale> _Sales;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalesPeople> SalesPeoples
        {
            get
            {
                if ((_SalesPeoples == null))
                {
                    _SalesPeoples = base.CreateObjectSet<SalesPeople>("SalesPeoples");
                }
                return _SalesPeoples;
            }
        }
        private ObjectSet<SalesPeople> _SalesPeoples;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Stock> Stocks
        {
            get
            {
                if ((_Stocks == null))
                {
                    _Stocks = base.CreateObjectSet<Stock>("Stocks");
                }
                return _Stocks;
            }
        }
        private ObjectSet<Stock> _Stocks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Store> Stores
        {
            get
            {
                if ((_Stores == null))
                {
                    _Stores = base.CreateObjectSet<Store>("Stores");
                }
                return _Stores;
            }
        }
        private ObjectSet<Store> _Stores;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Time> Times
        {
            get
            {
                if ((_Times == null))
                {
                    _Times = base.CreateObjectSet<Time>("Times");
                }
                return _Times;
            }
        }
        private ObjectSet<Time> _Times;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CountryRegions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountryRegions(CountryRegion countryRegion)
        {
            base.AddObject("CountryRegions", countryRegion);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CountryStates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountryStates(CountryState countryState)
        {
            base.AddObject("CountryStates", countryState);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ErrorLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToErrorLogs(ErrorLog errorLog)
        {
            base.AddObject("ErrorLogs", errorLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Locations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLocations(Location location)
        {
            base.AddObject("Locations", location);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Products EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProducts(Product product)
        {
            base.AddObject("Products", product);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sales EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSales(Sale sale)
        {
            base.AddObject("Sales", sale);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SalesPeoples EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSalesPeoples(SalesPeople salesPeople)
        {
            base.AddObject("SalesPeoples", salesPeople);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Stocks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStocks(Stock stock)
        {
            base.AddObject("Stocks", stock);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Stores EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStores(Store store)
        {
            base.AddObject("Stores", store);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Times EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTimes(Time time)
        {
            base.AddObject("Times", time);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AM_DWModel", Name="CountryRegion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CountryRegion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CountryRegion object.
        /// </summary>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static CountryRegion CreateCountryRegion(global::System.String code, global::System.String name)
        {
            CountryRegion countryRegion = new CountryRegion();
            countryRegion.Code = code;
            countryRegion.Name = name;
            return countryRegion;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                if (_Code != value)
                {
                    OnCodeChanging(value);
                    ReportPropertyChanging("Code");
                    _Code = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Code");
                    OnCodeChanged();
                }
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AM_DWModel", "FK_CountryStates_CountryRegions", "CountryStates")]
        public EntityCollection<CountryState> CountryStates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CountryState>("AM_DWModel.FK_CountryStates_CountryRegions", "CountryStates");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CountryState>("AM_DWModel.FK_CountryStates_CountryRegions", "CountryStates", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AM_DWModel", Name="CountryState")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CountryState : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CountryState object.
        /// </summary>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="regionCode">Initial value of the RegionCode property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static CountryState CreateCountryState(global::System.String code, global::System.String regionCode, global::System.String name)
        {
            CountryState countryState = new CountryState();
            countryState.Code = code;
            countryState.RegionCode = regionCode;
            countryState.Name = name;
            return countryState;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                if (_Code != value)
                {
                    OnCodeChanging(value);
                    ReportPropertyChanging("Code");
                    _Code = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Code");
                    OnCodeChanged();
                }
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RegionCode
        {
            get
            {
                return _RegionCode;
            }
            set
            {
                OnRegionCodeChanging(value);
                ReportPropertyChanging("RegionCode");
                _RegionCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RegionCode");
                OnRegionCodeChanged();
            }
        }
        private global::System.String _RegionCode;
        partial void OnRegionCodeChanging(global::System.String value);
        partial void OnRegionCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AM_DWModel", "FK_CountryStates_CountryRegions", "CountryRegions")]
        public CountryRegion CountryRegion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CountryRegion>("AM_DWModel.FK_CountryStates_CountryRegions", "CountryRegions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CountryRegion>("AM_DWModel.FK_CountryStates_CountryRegions", "CountryRegions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CountryRegion> CountryRegionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CountryRegion>("AM_DWModel.FK_CountryStates_CountryRegions", "CountryRegions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CountryRegion>("AM_DWModel.FK_CountryStates_CountryRegions", "CountryRegions", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AM_DWModel", Name="ErrorLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ErrorLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ErrorLog object.
        /// </summary>
        /// <param name="errorLogID">Initial value of the ErrorLogID property.</param>
        public static ErrorLog CreateErrorLog(global::System.Int32 errorLogID)
        {
            ErrorLog errorLog = new ErrorLog();
            errorLog.ErrorLogID = errorLogID;
            return errorLog;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ErrorLogID
        {
            get
            {
                return _ErrorLogID;
            }
            set
            {
                if (_ErrorLogID != value)
                {
                    OnErrorLogIDChanging(value);
                    ReportPropertyChanging("ErrorLogID");
                    _ErrorLogID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ErrorLogID");
                    OnErrorLogIDChanged();
                }
            }
        }
        private global::System.Int32 _ErrorLogID;
        partial void OnErrorLogIDChanging(global::System.Int32 value);
        partial void OnErrorLogIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Timestamp
        {
            get
            {
                return _Timestamp;
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private Nullable<global::System.DateTime> _Timestamp;
        partial void OnTimestampChanging(Nullable<global::System.DateTime> value);
        partial void OnTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AM_DWModel", Name="Location")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Location : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Location object.
        /// </summary>
        /// <param name="locationID">Initial value of the LocationID property.</param>
        /// <param name="state">Initial value of the State property.</param>
        /// <param name="region">Initial value of the Region property.</param>
        public static Location CreateLocation(global::System.Int32 locationID, global::System.String state, global::System.String region)
        {
            Location location = new Location();
            location.LocationID = locationID;
            location.State = state;
            location.Region = region;
            return location;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LocationID
        {
            get
            {
                return _LocationID;
            }
            set
            {
                if (_LocationID != value)
                {
                    OnLocationIDChanging(value);
                    ReportPropertyChanging("LocationID");
                    _LocationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LocationID");
                    OnLocationIDChanged();
                }
            }
        }
        private global::System.Int32 _LocationID;
        partial void OnLocationIDChanging(global::System.Int32 value);
        partial void OnLocationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Region
        {
            get
            {
                return _Region;
            }
            set
            {
                OnRegionChanging(value);
                ReportPropertyChanging("Region");
                _Region = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Region");
                OnRegionChanged();
            }
        }
        private global::System.String _Region;
        partial void OnRegionChanging(global::System.String value);
        partial void OnRegionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AM_DWModel", "FK_Stores_Locations", "Stores")]
        public EntityCollection<Store> Stores
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Store>("AM_DWModel.FK_Stores_Locations", "Stores");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Store>("AM_DWModel.FK_Stores_Locations", "Stores", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AM_DWModel", Name="Product")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Product : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Product object.
        /// </summary>
        /// <param name="productID">Initial value of the ProductID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="groupCode">Initial value of the GroupCode property.</param>
        /// <param name="unitPrice">Initial value of the UnitPrice property.</param>
        public static Product CreateProduct(global::System.Int32 productID, global::System.String description, global::System.Int32 groupCode, global::System.Decimal unitPrice)
        {
            Product product = new Product();
            product.ProductID = productID;
            product.Description = description;
            product.GroupCode = groupCode;
            product.UnitPrice = unitPrice;
            return product;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                if (_ProductID != value)
                {
                    OnProductIDChanging(value);
                    ReportPropertyChanging("ProductID");
                    _ProductID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductID");
                    OnProductIDChanged();
                }
            }
        }
        private global::System.Int32 _ProductID;
        partial void OnProductIDChanging(global::System.Int32 value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupCode
        {
            get
            {
                return _GroupCode;
            }
            set
            {
                OnGroupCodeChanging(value);
                ReportPropertyChanging("GroupCode");
                _GroupCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupCode");
                OnGroupCodeChanged();
            }
        }
        private global::System.Int32 _GroupCode;
        partial void OnGroupCodeChanging(global::System.Int32 value);
        partial void OnGroupCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GroupDescription
        {
            get
            {
                return _GroupDescription;
            }
            set
            {
                OnGroupDescriptionChanging(value);
                ReportPropertyChanging("GroupDescription");
                _GroupDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GroupDescription");
                OnGroupDescriptionChanged();
            }
        }
        private global::System.String _GroupDescription;
        partial void OnGroupDescriptionChanging(global::System.String value);
        partial void OnGroupDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal UnitPrice
        {
            get
            {
                return _UnitPrice;
            }
            set
            {
                OnUnitPriceChanging(value);
                ReportPropertyChanging("UnitPrice");
                _UnitPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnitPrice");
                OnUnitPriceChanged();
            }
        }
        private global::System.Decimal _UnitPrice;
        partial void OnUnitPriceChanging(global::System.Decimal value);
        partial void OnUnitPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> WeightConstraint
        {
            get
            {
                return _WeightConstraint;
            }
            set
            {
                OnWeightConstraintChanging(value);
                ReportPropertyChanging("WeightConstraint");
                _WeightConstraint = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WeightConstraint");
                OnWeightConstraintChanged();
            }
        }
        private Nullable<global::System.Double> _WeightConstraint;
        partial void OnWeightConstraintChanging(Nullable<global::System.Double> value);
        partial void OnWeightConstraintChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RegistryTimestamp
        {
            get
            {
                return _RegistryTimestamp;
            }
            set
            {
                OnRegistryTimestampChanging(value);
                ReportPropertyChanging("RegistryTimestamp");
                _RegistryTimestamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegistryTimestamp");
                OnRegistryTimestampChanged();
            }
        }
        private Nullable<global::System.DateTime> _RegistryTimestamp;
        partial void OnRegistryTimestampChanging(Nullable<global::System.DateTime> value);
        partial void OnRegistryTimestampChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AM_DWModel", Name="Sale")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Sale : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Sale object.
        /// </summary>
        /// <param name="saleID">Initial value of the SaleID property.</param>
        /// <param name="storeID">Initial value of the StoreID property.</param>
        /// <param name="productID">Initial value of the ProductID property.</param>
        /// <param name="salesPersonID">Initial value of the SalesPersonID property.</param>
        /// <param name="timestamp">Initial value of the Timestamp property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="weight">Initial value of the Weight property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static Sale CreateSale(global::System.Int32 saleID, global::System.Int32 storeID, global::System.Int32 productID, global::System.Int32 salesPersonID, global::System.DateTime timestamp, global::System.Int32 quantity, global::System.Double weight, global::System.Decimal value)
        {
            Sale sale = new Sale();
            sale.SaleID = saleID;
            sale.StoreID = storeID;
            sale.ProductID = productID;
            sale.SalesPersonID = salesPersonID;
            sale.Timestamp = timestamp;
            sale.Quantity = quantity;
            sale.Weight = weight;
            sale.Value = value;
            return sale;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SaleID
        {
            get
            {
                return _SaleID;
            }
            set
            {
                if (_SaleID != value)
                {
                    OnSaleIDChanging(value);
                    ReportPropertyChanging("SaleID");
                    _SaleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SaleID");
                    OnSaleIDChanged();
                }
            }
        }
        private global::System.Int32 _SaleID;
        partial void OnSaleIDChanging(global::System.Int32 value);
        partial void OnSaleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StoreID
        {
            get
            {
                return _StoreID;
            }
            set
            {
                OnStoreIDChanging(value);
                ReportPropertyChanging("StoreID");
                _StoreID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StoreID");
                OnStoreIDChanged();
            }
        }
        private global::System.Int32 _StoreID;
        partial void OnStoreIDChanging(global::System.Int32 value);
        partial void OnStoreIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                OnProductIDChanging(value);
                ReportPropertyChanging("ProductID");
                _ProductID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductID");
                OnProductIDChanged();
            }
        }
        private global::System.Int32 _ProductID;
        partial void OnProductIDChanging(global::System.Int32 value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SalesPersonID
        {
            get
            {
                return _SalesPersonID;
            }
            set
            {
                OnSalesPersonIDChanging(value);
                ReportPropertyChanging("SalesPersonID");
                _SalesPersonID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SalesPersonID");
                OnSalesPersonIDChanged();
            }
        }
        private global::System.Int32 _SalesPersonID;
        partial void OnSalesPersonIDChanging(global::System.Int32 value);
        partial void OnSalesPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Timestamp
        {
            get
            {
                return _Timestamp;
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.DateTime _Timestamp;
        partial void OnTimestampChanging(global::System.DateTime value);
        partial void OnTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Weight
        {
            get
            {
                return _Weight;
            }
            set
            {
                OnWeightChanging(value);
                ReportPropertyChanging("Weight");
                _Weight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Weight");
                OnWeightChanged();
            }
        }
        private global::System.Double _Weight;
        partial void OnWeightChanging(global::System.Double value);
        partial void OnWeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Decimal _Value;
        partial void OnValueChanging(global::System.Decimal value);
        partial void OnValueChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AM_DWModel", "FK_Sales_Stores", "Stores")]
        public Store Store
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Store>("AM_DWModel.FK_Sales_Stores", "Stores").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Store>("AM_DWModel.FK_Sales_Stores", "Stores").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Store> StoreReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Store>("AM_DWModel.FK_Sales_Stores", "Stores");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Store>("AM_DWModel.FK_Sales_Stores", "Stores", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AM_DWModel", "FK_Sales_Times", "Times")]
        public Time Time
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Time>("AM_DWModel.FK_Sales_Times", "Times").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Time>("AM_DWModel.FK_Sales_Times", "Times").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Time> TimeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Time>("AM_DWModel.FK_Sales_Times", "Times");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Time>("AM_DWModel.FK_Sales_Times", "Times", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AM_DWModel", Name="SalesPeople")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SalesPeople : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SalesPeople object.
        /// </summary>
        /// <param name="salesPersonID">Initial value of the SalesPersonID property.</param>
        /// <param name="managerCode">Initial value of the ManagerCode property.</param>
        /// <param name="managerName">Initial value of the ManagerName property.</param>
        /// <param name="supervisorCode">Initial value of the SupervisorCode property.</param>
        /// <param name="supervisorName">Initial value of the SupervisorName property.</param>
        public static SalesPeople CreateSalesPeople(global::System.Int32 salesPersonID, global::System.Int32 managerCode, global::System.String managerName, global::System.Int32 supervisorCode, global::System.String supervisorName)
        {
            SalesPeople salesPeople = new SalesPeople();
            salesPeople.SalesPersonID = salesPersonID;
            salesPeople.ManagerCode = managerCode;
            salesPeople.ManagerName = managerName;
            salesPeople.SupervisorCode = supervisorCode;
            salesPeople.SupervisorName = supervisorName;
            return salesPeople;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SalesPersonID
        {
            get
            {
                return _SalesPersonID;
            }
            set
            {
                if (_SalesPersonID != value)
                {
                    OnSalesPersonIDChanging(value);
                    ReportPropertyChanging("SalesPersonID");
                    _SalesPersonID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SalesPersonID");
                    OnSalesPersonIDChanged();
                }
            }
        }
        private global::System.Int32 _SalesPersonID;
        partial void OnSalesPersonIDChanging(global::System.Int32 value);
        partial void OnSalesPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ManagerCode
        {
            get
            {
                return _ManagerCode;
            }
            set
            {
                OnManagerCodeChanging(value);
                ReportPropertyChanging("ManagerCode");
                _ManagerCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ManagerCode");
                OnManagerCodeChanged();
            }
        }
        private global::System.Int32 _ManagerCode;
        partial void OnManagerCodeChanging(global::System.Int32 value);
        partial void OnManagerCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ManagerName
        {
            get
            {
                return _ManagerName;
            }
            set
            {
                OnManagerNameChanging(value);
                ReportPropertyChanging("ManagerName");
                _ManagerName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ManagerName");
                OnManagerNameChanged();
            }
        }
        private global::System.String _ManagerName;
        partial void OnManagerNameChanging(global::System.String value);
        partial void OnManagerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SupervisorCode
        {
            get
            {
                return _SupervisorCode;
            }
            set
            {
                OnSupervisorCodeChanging(value);
                ReportPropertyChanging("SupervisorCode");
                _SupervisorCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SupervisorCode");
                OnSupervisorCodeChanged();
            }
        }
        private global::System.Int32 _SupervisorCode;
        partial void OnSupervisorCodeChanging(global::System.Int32 value);
        partial void OnSupervisorCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SupervisorName
        {
            get
            {
                return _SupervisorName;
            }
            set
            {
                OnSupervisorNameChanging(value);
                ReportPropertyChanging("SupervisorName");
                _SupervisorName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SupervisorName");
                OnSupervisorNameChanged();
            }
        }
        private global::System.String _SupervisorName;
        partial void OnSupervisorNameChanging(global::System.String value);
        partial void OnSupervisorNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RegistryTimestamp
        {
            get
            {
                return _RegistryTimestamp;
            }
            set
            {
                OnRegistryTimestampChanging(value);
                ReportPropertyChanging("RegistryTimestamp");
                _RegistryTimestamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegistryTimestamp");
                OnRegistryTimestampChanged();
            }
        }
        private Nullable<global::System.DateTime> _RegistryTimestamp;
        partial void OnRegistryTimestampChanging(Nullable<global::System.DateTime> value);
        partial void OnRegistryTimestampChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AM_DWModel", Name="Stock")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Stock : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Stock object.
        /// </summary>
        /// <param name="stockID">Initial value of the StockID property.</param>
        /// <param name="storeID">Initial value of the StoreID property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        public static Stock CreateStock(global::System.Int32 stockID, global::System.Int32 storeID, global::System.Int32 quantity)
        {
            Stock stock = new Stock();
            stock.StockID = stockID;
            stock.StoreID = storeID;
            stock.Quantity = quantity;
            return stock;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StockID
        {
            get
            {
                return _StockID;
            }
            set
            {
                if (_StockID != value)
                {
                    OnStockIDChanging(value);
                    ReportPropertyChanging("StockID");
                    _StockID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StockID");
                    OnStockIDChanged();
                }
            }
        }
        private global::System.Int32 _StockID;
        partial void OnStockIDChanging(global::System.Int32 value);
        partial void OnStockIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StoreID
        {
            get
            {
                return _StoreID;
            }
            set
            {
                OnStoreIDChanging(value);
                ReportPropertyChanging("StoreID");
                _StoreID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StoreID");
                OnStoreIDChanged();
            }
        }
        private global::System.Int32 _StoreID;
        partial void OnStoreIDChanging(global::System.Int32 value);
        partial void OnStoreIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                OnProductIDChanging(value);
                ReportPropertyChanging("ProductID");
                _ProductID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductID");
                OnProductIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProductID;
        partial void OnProductIDChanging(Nullable<global::System.Int32> value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AM_DWModel", "FK_StockFact_Stores", "Stores")]
        public Store Store
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Store>("AM_DWModel.FK_StockFact_Stores", "Stores").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Store>("AM_DWModel.FK_StockFact_Stores", "Stores").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Store> StoreReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Store>("AM_DWModel.FK_StockFact_Stores", "Stores");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Store>("AM_DWModel.FK_StockFact_Stores", "Stores", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AM_DWModel", Name="Store")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Store : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Store object.
        /// </summary>
        /// <param name="storeID">Initial value of the StoreID property.</param>
        /// <param name="locationID">Initial value of the LocationID property.</param>
        public static Store CreateStore(global::System.Int32 storeID, global::System.Int32 locationID)
        {
            Store store = new Store();
            store.StoreID = storeID;
            store.LocationID = locationID;
            return store;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StoreID
        {
            get
            {
                return _StoreID;
            }
            set
            {
                if (_StoreID != value)
                {
                    OnStoreIDChanging(value);
                    ReportPropertyChanging("StoreID");
                    _StoreID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StoreID");
                    OnStoreIDChanged();
                }
            }
        }
        private global::System.Int32 _StoreID;
        partial void OnStoreIDChanging(global::System.Int32 value);
        partial void OnStoreIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LocationID
        {
            get
            {
                return _LocationID;
            }
            set
            {
                OnLocationIDChanging(value);
                ReportPropertyChanging("LocationID");
                _LocationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LocationID");
                OnLocationIDChanged();
            }
        }
        private global::System.Int32 _LocationID;
        partial void OnLocationIDChanging(global::System.Int32 value);
        partial void OnLocationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RegistryTimestamp
        {
            get
            {
                return _RegistryTimestamp;
            }
            set
            {
                OnRegistryTimestampChanging(value);
                ReportPropertyChanging("RegistryTimestamp");
                _RegistryTimestamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegistryTimestamp");
                OnRegistryTimestampChanged();
            }
        }
        private Nullable<global::System.DateTime> _RegistryTimestamp;
        partial void OnRegistryTimestampChanging(Nullable<global::System.DateTime> value);
        partial void OnRegistryTimestampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AM_DWModel", "FK_Stores_Locations", "Locations")]
        public Location Location
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("AM_DWModel.FK_Stores_Locations", "Locations").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("AM_DWModel.FK_Stores_Locations", "Locations").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> LocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("AM_DWModel.FK_Stores_Locations", "Locations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("AM_DWModel.FK_Stores_Locations", "Locations", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AM_DWModel", "FK_Sales_Stores", "Sales")]
        public EntityCollection<Sale> Sales
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Sale>("AM_DWModel.FK_Sales_Stores", "Sales");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Sale>("AM_DWModel.FK_Sales_Stores", "Sales", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AM_DWModel", "FK_StockFact_Stores", "Stock")]
        public EntityCollection<Stock> Stocks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Stock>("AM_DWModel.FK_StockFact_Stores", "Stock");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Stock>("AM_DWModel.FK_StockFact_Stores", "Stock", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AM_DWModel", Name="Time")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Time : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Time object.
        /// </summary>
        /// <param name="timeID">Initial value of the TimeID property.</param>
        /// <param name="day">Initial value of the Day property.</param>
        public static Time CreateTime(global::System.DateTime timeID, global::System.Int32 day)
        {
            Time time = new Time();
            time.TimeID = timeID;
            time.Day = day;
            return time;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TimeID
        {
            get
            {
                return _TimeID;
            }
            set
            {
                if (_TimeID != value)
                {
                    OnTimeIDChanging(value);
                    ReportPropertyChanging("TimeID");
                    _TimeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TimeID");
                    OnTimeIDChanged();
                }
            }
        }
        private global::System.DateTime _TimeID;
        partial void OnTimeIDChanging(global::System.DateTime value);
        partial void OnTimeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Day
        {
            get
            {
                return _Day;
            }
            set
            {
                OnDayChanging(value);
                ReportPropertyChanging("Day");
                _Day = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Day");
                OnDayChanged();
            }
        }
        private global::System.Int32 _Day;
        partial void OnDayChanging(global::System.Int32 value);
        partial void OnDayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Month
        {
            get
            {
                return _Month;
            }
            set
            {
                OnMonthChanging(value);
                ReportPropertyChanging("Month");
                _Month = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Month");
                OnMonthChanged();
            }
        }
        private Nullable<global::System.Int32> _Month;
        partial void OnMonthChanging(Nullable<global::System.Int32> value);
        partial void OnMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Quarter
        {
            get
            {
                return _Quarter;
            }
            set
            {
                OnQuarterChanging(value);
                ReportPropertyChanging("Quarter");
                _Quarter = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quarter");
                OnQuarterChanged();
            }
        }
        private Nullable<global::System.Int32> _Quarter;
        partial void OnQuarterChanging(Nullable<global::System.Int32> value);
        partial void OnQuarterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private Nullable<global::System.Int32> _Year;
        partial void OnYearChanging(Nullable<global::System.Int32> value);
        partial void OnYearChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AM_DWModel", "FK_Sales_Times", "Sales")]
        public EntityCollection<Sale> Sales
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Sale>("AM_DWModel.FK_Sales_Times", "Sales");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Sale>("AM_DWModel.FK_Sales_Times", "Sales", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}

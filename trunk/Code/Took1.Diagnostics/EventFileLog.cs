///////////////////////////////////////////////////////////
//  EventFileLog.cs
//  Implementation of the Class EventFileLog
//  Generated by Enterprise Architect
//  Created on:      07-jan-2009 12:09:35
//  Original author: André Matos
///////////////////////////////////////////////////////////




using System.IO;
using System;
namespace Took1.Diagnostics {
    /// <summary>
    /// Gera log em arquivo texto
    /// </summary>
    public class EventFileLog
    {

        public string FileName { get; set; }
        /// <summary>
        /// Caminho para o diretório onde arquivo de log será gravado
        /// </summary>
        public string Path { get; set; }

        /// <summary>
        /// Construtor
        /// </summary>
        public EventFileLog()
        {
            FileName = null;
            Path = null;

        }
        /// <summary>
        /// Construtor
        /// </summary>
        /// <param name="path">Diretório onde será gravado log</param>
        /// <param name="fileName">Nome do arquivo de log</param>
        public EventFileLog(string path, string fileName)
        {
            FileName = fileName;
            Path = path;
        }

        /// <summary>
        /// Escreve entrada em log
        /// </summary>
        /// <param name="entry">Mensagem</param>
        public void WriteEntry(string entry)
        {
            WriteEntry(Path, FileName, entry);
        }
        /// <summary>
        /// Escreve entrada em log
        /// </summary>
        /// <param name="eventLogEntry">Entrada a ser gravada no log</param>
        public void WriteEntry(EventLogEntry eventLogEntry)
        {
            WriteEntry(Path, FileName, eventLogEntry);
        }

        /// 
        /// <param name="path">Caminho para o diretório onde será gravado o arquivo de
        /// log</param>
        /// <param name="filename">Nome do arquivo de log</param>
        /// <param name="entry">Mensagem a ser logada</param>
        public static void WriteEntry(string path, string filename, string entry)
        {
            WriteEntry(path, filename, new EventLogEntry() { EventData = entry, Timestamp = DateTime.Now, Type = EventLogEntryType.Info });
        }

        /// <summary>
        /// Escreve entrada em log
        /// </summary>
        /// <param name="path">Caminho para o diretório onde será gravado o arquivo de
        /// log</param>
        /// <param name="filename">Nome do arquivo de log</param>
        /// <param name="eventLogEntry">Mensagem a ser logada</param>
        public static void WriteEntry(string path, string filename, EventLogEntry eventLogEntry)
        {
            try
            {
                string xmlEntry = string.Empty;
                //xmlEntry = XmlSerializer<EventLogEntry>.Save(eventLogEntry);
                xmlEntry = string.Format("[{0}][{1}]:{2}{3}", eventLogEntry.Source, eventLogEntry.Timestamp, eventLogEntry.EventData, Environment.NewLine);

                if (!Directory.Exists(path))
                    Directory.CreateDirectory(path);
                File.AppendAllText(path + filename, xmlEntry);
            }
            catch (Exception exception) { }
        }


    }//end EventFileLog

}//end namespace Diagnostics